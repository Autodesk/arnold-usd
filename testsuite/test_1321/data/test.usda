#usda 1.0
(
    defaultPrim = "torus1"
    endTimeCode = 1
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "cameras"
{
    def Camera "camera1" (
        prepend apiSchemas = ["HoudiniCameraPlateAPI", "HoudiniViewportGuideAPI"]
    )
    {
        float2 clippingRange = (0.001, 1000)
        float exposure = 0
        float focalLength = 0.5
        float focusDistance = 5
        float fStop = 0
        float horizontalAperture = 0.5
        float horizontalApertureOffset = 0
        asset houdini:backgroundimage = @@
        asset houdini:foregroundimage = @@
        float houdini:guidescale = 1
        bool houdini:inviewermenu = 1
        token projection = "perspective"
        double shutter:close = 0.25
        double shutter:open = -0.25
        float verticalAperture = 0.28125
        float verticalApertureOffset = 0
        matrix4d xformOp:transform = ( (0.7406955256404458, -1.6205168481152495e-8, -0.6718408578645865, 0), (-0.5190154731601054, 0.6349814123856913, -0.5722076061579964, 0), (0.42660646609799024, 0.7725274143515377, 0.470327882608199, 0), (0.9251092444191469, 1.4678906223513313, 0.977210478971648, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def Xform "torus1" (
    kind = "component"
)
{
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Mesh "mesh_0"
    {
        float3[] extent = [(-0.75, -0.25, -0.75), (0.75, 0.25, 0.75)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 25, 24, 1, 2, 26, 25, 2, 3, 27, 26, 3, 4, 28, 27, 4, 5, 29, 28, 5, 6, 30, 29, 6, 7, 31, 30, 7, 8, 32, 31, 8, 9, 33, 32, 9, 10, 34, 33, 10, 11, 35, 34, 11, 12, 36, 35, 12, 13, 37, 36, 13, 14, 38, 37, 14, 15, 39, 38, 15, 16, 40, 39, 16, 17, 41, 40, 17, 18, 42, 41, 18, 19, 43, 42, 19, 20, 44, 43, 20, 21, 45, 44, 21, 22, 46, 45, 22, 23, 47, 46, 23, 0, 24, 47, 24, 25, 49, 48, 25, 26, 50, 49, 26, 27, 51, 50, 27, 28, 52, 51, 28, 29, 53, 52, 29, 30, 54, 53, 30, 31, 55, 54, 31, 32, 56, 55, 32, 33, 57, 56, 33, 34, 58, 57, 34, 35, 59, 58, 35, 36, 60, 59, 36, 37, 61, 60, 37, 38, 62, 61, 38, 39, 63, 62, 39, 40, 64, 63, 40, 41, 65, 64, 41, 42, 66, 65, 42, 43, 67, 66, 43, 44, 68, 67, 44, 45, 69, 68, 45, 46, 70, 69, 46, 47, 71, 70, 47, 24, 48, 71, 48, 49, 73, 72, 49, 50, 74, 73, 50, 51, 75, 74, 51, 52, 76, 75, 52, 53, 77, 76, 53, 54, 78, 77, 54, 55, 79, 78, 55, 56, 80, 79, 56, 57, 81, 80, 57, 58, 82, 81, 58, 59, 83, 82, 59, 60, 84, 83, 60, 61, 85, 84, 61, 62, 86, 85, 62, 63, 87, 86, 63, 64, 88, 87, 64, 65, 89, 88, 65, 66, 90, 89, 66, 67, 91, 90, 67, 68, 92, 91, 68, 69, 93, 92, 69, 70, 94, 93, 70, 71, 95, 94, 71, 48, 72, 95, 72, 73, 97, 96, 73, 74, 98, 97, 74, 75, 99, 98, 75, 76, 100, 99, 76, 77, 101, 100, 77, 78, 102, 101, 78, 79, 103, 102, 79, 80, 104, 103, 80, 81, 105, 104, 81, 82, 106, 105, 82, 83, 107, 106, 83, 84, 108, 107, 84, 85, 109, 108, 85, 86, 110, 109, 86, 87, 111, 110, 87, 88, 112, 111, 88, 89, 113, 112, 89, 90, 114, 113, 90, 91, 115, 114, 91, 92, 116, 115, 92, 93, 117, 116, 93, 94, 118, 117, 94, 95, 119, 118, 95, 72, 96, 119, 96, 97, 121, 120, 97, 98, 122, 121, 98, 99, 123, 122, 99, 100, 124, 123, 100, 101, 125, 124, 101, 102, 126, 125, 102, 103, 127, 126, 103, 104, 128, 127, 104, 105, 129, 128, 105, 106, 130, 129, 106, 107, 131, 130, 107, 108, 132, 131, 108, 109, 133, 132, 109, 110, 134, 133, 110, 111, 135, 134, 111, 112, 136, 135, 112, 113, 137, 136, 113, 114, 138, 137, 114, 115, 139, 138, 115, 116, 140, 139, 116, 117, 141, 140, 117, 118, 142, 141, 118, 119, 143, 142, 119, 96, 120, 143, 120, 121, 145, 144, 121, 122, 146, 145, 122, 123, 147, 146, 123, 124, 148, 147, 124, 125, 149, 148, 125, 126, 150, 149, 126, 127, 151, 150, 127, 128, 152, 151, 128, 129, 153, 152, 129, 130, 154, 153, 130, 131, 155, 154, 131, 132, 156, 155, 132, 133, 157, 156, 133, 134, 158, 157, 134, 135, 159, 158, 135, 136, 160, 159, 136, 137, 161, 160, 137, 138, 162, 161, 138, 139, 163, 162, 139, 140, 164, 163, 140, 141, 165, 164, 141, 142, 166, 165, 142, 143, 167, 166, 143, 120, 144, 167, 144, 145, 169, 168, 145, 146, 170, 169, 146, 147, 171, 170, 147, 148, 172, 171, 148, 149, 173, 172, 149, 150, 174, 173, 150, 151, 175, 174, 151, 152, 176, 175, 152, 153, 177, 176, 153, 154, 178, 177, 154, 155, 179, 178, 155, 156, 180, 179, 156, 157, 181, 180, 157, 158, 182, 181, 158, 159, 183, 182, 159, 160, 184, 183, 160, 161, 185, 184, 161, 162, 186, 185, 162, 163, 187, 186, 163, 164, 188, 187, 164, 165, 189, 188, 165, 166, 190, 189, 166, 167, 191, 190, 167, 144, 168, 191, 168, 169, 193, 192, 169, 170, 194, 193, 170, 171, 195, 194, 171, 172, 196, 195, 172, 173, 197, 196, 173, 174, 198, 197, 174, 175, 199, 198, 175, 176, 200, 199, 176, 177, 201, 200, 177, 178, 202, 201, 178, 179, 203, 202, 179, 180, 204, 203, 180, 181, 205, 204, 181, 182, 206, 205, 182, 183, 207, 206, 183, 184, 208, 207, 184, 185, 209, 208, 185, 186, 210, 209, 186, 187, 211, 210, 187, 188, 212, 211, 188, 189, 213, 212, 189, 190, 214, 213, 190, 191, 215, 214, 191, 168, 192, 215, 192, 193, 217, 216, 193, 194, 218, 217, 194, 195, 219, 218, 195, 196, 220, 219, 196, 197, 221, 220, 197, 198, 222, 221, 198, 199, 223, 222, 199, 200, 224, 223, 200, 201, 225, 224, 201, 202, 226, 225, 202, 203, 227, 226, 203, 204, 228, 227, 204, 205, 229, 228, 205, 206, 230, 229, 206, 207, 231, 230, 207, 208, 232, 231, 208, 209, 233, 232, 209, 210, 234, 233, 210, 211, 235, 234, 211, 212, 236, 235, 212, 213, 237, 236, 213, 214, 238, 237, 214, 215, 239, 238, 215, 192, 216, 239, 216, 217, 241, 240, 217, 218, 242, 241, 218, 219, 243, 242, 219, 220, 244, 243, 220, 221, 245, 244, 221, 222, 246, 245, 222, 223, 247, 246, 223, 224, 248, 247, 224, 225, 249, 248, 225, 226, 250, 249, 226, 227, 251, 250, 227, 228, 252, 251, 228, 229, 253, 252, 229, 230, 254, 253, 230, 231, 255, 254, 231, 232, 256, 255, 232, 233, 257, 256, 233, 234, 258, 257, 234, 235, 259, 258, 235, 236, 260, 259, 236, 237, 261, 260, 237, 238, 262, 261, 238, 239, 263, 262, 239, 216, 240, 263, 240, 241, 265, 264, 241, 242, 266, 265, 242, 243, 267, 266, 243, 244, 268, 267, 244, 245, 269, 268, 245, 246, 270, 269, 246, 247, 271, 270, 247, 248, 272, 271, 248, 249, 273, 272, 249, 250, 274, 273, 250, 251, 275, 274, 251, 252, 276, 275, 252, 253, 277, 276, 253, 254, 278, 277, 254, 255, 279, 278, 255, 256, 280, 279, 256, 257, 281, 280, 257, 258, 282, 281, 258, 259, 283, 282, 259, 260, 284, 283, 260, 261, 285, 284, 261, 262, 286, 285, 262, 263, 287, 286, 263, 240, 264, 287, 264, 265, 1, 0, 265, 266, 2, 1, 266, 267, 3, 2, 267, 268, 4, 3, 268, 269, 5, 4, 269, 270, 6, 5, 270, 271, 7, 6, 271, 272, 8, 7, 272, 273, 9, 8, 273, 274, 10, 9, 274, 275, 11, 10, 275, 276, 12, 11, 276, 277, 13, 12, 277, 278, 14, 13, 278, 279, 15, 14, 279, 280, 16, 15, 280, 281, 17, 16, 281, 282, 18, 17, 282, 283, 19, 18, 283, 284, 20, 19, 284, 285, 21, 20, 285, 286, 22, 21, 286, 287, 23, 22, 287, 264, 0, 23]
        uniform token orientation = "leftHanded"
        point3f[] points = [(0.75, -2.1855694e-8, -5.8412155e-7), (0.7244442, -2.1855694e-8, -0.19411482), (0.64951885, -2.1855694e-8, -0.37500045), (0.53032976, -2.1855694e-8, -0.5303304), (0.3749996, -2.1855694e-8, -0.64951926), (0.19411391, -2.1855694e-8, -0.72444445), (-3.486842e-7, -2.1855694e-8, -0.75), (-0.19411457, -2.1855694e-8, -0.72444427), (-0.37500024, -2.1855694e-8, -0.6495189), (-0.5303304, -2.1855694e-8, -0.5303298), (-0.6495192, -2.1855694e-8, -0.3749997), (-0.72444445, -2.1855694e-8, -0.19411397), (-0.75, -2.1855694e-8, 2.9206078e-7), (-0.7244443, -2.1855694e-8, 0.19411454), (-0.64951897, -2.1855694e-8, 0.37500018), (-0.53032994, -2.1855694e-8, 0.5303302), (-0.37499988, -2.1855694e-8, 0.64951915), (-0.1941142, -2.1855694e-8, 0.7244444), (5.6623428e-8, -2.1855694e-8, 0.75), (0.1941143, -2.1855694e-8, 0.7244444), (0.37499997, -2.1855694e-8, 0.6495191), (0.53033006, -2.1855694e-8, 0.53033006), (0.649519, -2.1855694e-8, 0.375), (0.7244444, -2.1855694e-8, 0.19411428), (0.7165063, -0.12500004, -5.580357e-7), (0.6920918, -0.12500004, -0.185446), (0.6205124, -0.12500004, -0.35825357), (0.50664616, -0.12500004, -0.5066468), (0.3582528, -0.12500004, -0.62051284), (0.18544511, -0.12500004, -0.692092), (-3.3311258e-7, -0.12500004, -0.7165063), (-0.18544576, -0.12500004, -0.6920918), (-0.35825336, -0.12500004, -0.62051255), (-0.50664675, -0.12500004, -0.5066462), (-0.62051284, -0.12500004, -0.35825285), (-0.692092, -0.12500004, -0.18544517), (-0.7165063, -0.12500004, 2.7901785e-7), (-0.6920919, -0.12500004, 0.18544571), (-0.62051255, -0.12500004, 0.35825333), (-0.50664634, -0.12500004, 0.5066466), (-0.35825303, -0.12500004, 0.6205127), (-0.18544538, -0.12500004, 0.692092), (5.4094723e-8, -0.12500004, 0.7165063), (0.1854455, -0.12500004, 0.69209194), (0.35825312, -0.12500004, 0.62051266), (0.50664645, -0.12500004, 0.50664645), (0.62051266, -0.12500004, 0.35825315), (0.69209194, -0.12500004, 0.18544547), (0.625, -0.21650636, -4.8676793e-7), (0.6037035, -0.21650636, -0.16176236), (0.54126567, -0.21650636, -0.31250036), (0.44194147, -0.21650636, -0.44194204), (0.31249967, -0.21650636, -0.5412661), (0.16176158, -0.21650636, -0.60370374), (-2.9057017e-7, -0.21650636, -0.625), (-0.16176215, -0.21650636, -0.60370356), (-0.31250018, -0.21650636, -0.5412657), (-0.44194198, -0.21650636, -0.4419415), (-0.541266, -0.21650636, -0.31249973), (-0.60370374, -0.21650636, -0.16176164), (-0.625, -0.21650636, 2.4338397e-7), (-0.6037036, -0.21650636, 0.1617621), (-0.5412658, -0.21650636, 0.31250015), (-0.44194162, -0.21650636, 0.44194186), (-0.3124999, -0.21650636, 0.54126596), (-0.16176182, -0.21650636, 0.6037037), (4.7186187e-8, -0.21650636, 0.625), (0.16176192, -0.21650636, 0.6037036), (0.31249997, -0.21650636, 0.5412659), (0.44194174, -0.21650636, 0.44194174), (0.54126585, -0.21650636, 0.3125), (0.6037036, -0.21650636, 0.16176191), (0.5, -0.25, -3.8941437e-7), (0.48296282, -0.25, -0.12940988), (0.43301255, -0.25, -0.2500003), (0.35355318, -0.25, -0.35355362), (0.24999975, -0.25, -0.43301284), (0.12940927, -0.25, -0.48296297), (-2.3245614e-7, -0.25, -0.5), (-0.12940972, -0.25, -0.48296285), (-0.25000015, -0.25, -0.4330126), (-0.3535536, -0.25, -0.3535532), (-0.4330128, -0.25, -0.24999979), (-0.48296297, -0.25, -0.12940931), (-0.5, -0.25, 1.9470718e-7), (-0.48296288, -0.25, 0.12940969), (-0.43301263, -0.25, 0.25000012), (-0.3535533, -0.25, 0.35355347), (-0.24999993, -0.25, 0.43301275), (-0.12940946, -0.25, 0.48296294), (3.774895e-8, -0.25, 0.5), (0.12940954, -0.25, 0.4829629), (0.24999999, -0.25, 0.43301272), (0.35355338, -0.25, 0.35355338), (0.4330127, -0.25, 0.25), (0.4829629, -0.25, 0.12940952), (0.37500003, -0.21650636, -2.920608e-7), (0.36222214, -0.21650636, -0.09705742), (0.32475942, -0.21650636, -0.18750024), (0.2651649, -0.21650636, -0.26516524), (0.18749982, -0.21650636, -0.32475966), (0.09705696, -0.21650636, -0.36222225), (-1.7434212e-7, -0.21650636, -0.37500003), (-0.0970573, -0.21650636, -0.36222216), (-0.18750013, -0.21650636, -0.32475948), (-0.2651652, -0.21650636, -0.2651649), (-0.32475963, -0.21650636, -0.18749985), (-0.36222225, -0.21650636, -0.09705699), (-0.37500003, -0.21650636, 1.460304e-7), (-0.3622222, -0.21650636, 0.097057275), (-0.3247595, -0.21650636, 0.1875001), (-0.265165, -0.21650636, 0.26516512), (-0.18749996, -0.21650636, 0.3247596), (-0.097057104, -0.21650636, 0.36222222), (2.8311716e-8, -0.21650636, 0.37500003), (0.09705716, -0.21650636, 0.3622222), (0.1875, -0.21650636, 0.32475957), (0.26516506, -0.21650636, 0.26516506), (0.32475954, -0.21650636, 0.18750001), (0.3622222, -0.21650636, 0.09705715), (0.28349367, -0.12500004, -2.2079301e-7), (0.2738338, -0.12500004, -0.073373765), (0.24551263, -0.12500004, -0.141747), (0.20046018, -0.12500004, -0.20046043), (0.14174668, -0.12500004, -0.2455128), (0.073373415, -0.12500004, -0.27383387), (-1.317997e-7, -0.12500004, -0.28349367), (-0.07337367, -0.12500004, -0.2738338), (-0.14174692, -0.12500004, -0.24551266), (-0.2004604, -0.12500004, -0.2004602), (-0.24551278, -0.12500004, -0.14174671), (-0.27383387, -0.12500004, -0.073373444), (-0.28349367, -0.12500004, 1.10396506e-7), (-0.27383384, -0.12500004, 0.07337365), (-0.24551268, -0.12500004, 0.14174691), (-0.20046024, -0.12500004, 0.20046034), (-0.14174679, -0.12500004, 0.24551275), (-0.07337353, -0.12500004, 0.27383387), (2.1403176e-8, -0.12500004, 0.28349367), (0.07337357, -0.12500004, 0.27383384), (0.14174682, -0.12500004, 0.24551272), (0.20046028, -0.12500004, 0.20046028), (0.24551271, -0.12500004, 0.14174683), (0.27383384, -0.12500004, 0.07337356), (0.25, -7.54979e-8, -1.9470718e-7), (0.24148141, -7.54979e-8, -0.06470494), (0.21650627, -7.54979e-8, -0.12500015), (0.17677659, -7.54979e-8, -0.17677681), (0.12499987, -7.54979e-8, -0.21650642), (0.064704634, -7.54979e-8, -0.24148148), (-1.1622807e-7, -7.54979e-8, -0.25), (-0.06470486, -7.54979e-8, -0.24148142), (-0.12500007, -7.54979e-8, -0.2165063), (-0.1767768, -7.54979e-8, -0.1767766), (-0.2165064, -7.54979e-8, -0.124999896), (-0.24148148, -7.54979e-8, -0.06470466), (-0.25, -7.54979e-8, 9.735359e-8), (-0.24148144, -7.54979e-8, 0.06470484), (-0.21650632, -7.54979e-8, 0.12500006), (-0.17677665, -7.54979e-8, 0.17677674), (-0.12499996, -7.54979e-8, 0.21650638), (-0.06470473, -7.54979e-8, 0.24148147), (1.8874475e-8, -7.54979e-8, 0.25), (0.06470477, -7.54979e-8, 0.24148145), (0.12499999, -7.54979e-8, 0.21650636), (0.17677669, -7.54979e-8, 0.17677669), (0.21650635, -7.54979e-8, 0.125), (0.24148145, -7.54979e-8, 0.06470476), (0.28349358, 0.12499991, -2.2079294e-7), (0.27383372, 0.12499991, -0.07337374), (0.24551255, 0.12499991, -0.14174695), (0.2004601, 0.12499991, -0.20046036), (0.14174664, 0.12499991, -0.24551272), (0.07337339, 0.12499991, -0.2738338), (-1.3179965e-7, 0.12499991, -0.28349358), (-0.073373646, 0.12499991, -0.27383372), (-0.14174688, 0.12499991, -0.24551259), (-0.20046034, 0.12499991, -0.20046012), (-0.24551271, 0.12499991, -0.14174667), (-0.2738338, 0.12499991, -0.07337342), (-0.28349358, 0.12499991, 1.1039647e-7), (-0.27383375, 0.12499991, 0.07337363), (-0.2455126, 0.12499991, 0.14174686), (-0.20046018, 0.12499991, 0.20046028), (-0.14174674, 0.12499991, 0.24551266), (-0.073373504, 0.12499991, 0.27383378), (2.140317e-8, 0.12499991, 0.28349358), (0.07337355, 0.12499991, 0.27383375), (0.14174677, 0.12499991, 0.24551265), (0.20046023, 0.12499991, 0.20046023), (0.24551263, 0.12499991, 0.14174679), (0.27383375, 0.12499991, 0.073373534), (0.37499988, 0.21650629, -2.920607e-7), (0.362222, 0.21650629, -0.09705738), (0.3247593, 0.21650629, -0.18750016), (0.2651648, 0.21650629, -0.26516512), (0.18749975, 0.21650629, -0.32475954), (0.09705692, 0.21650629, -0.3622221), (-1.7434205e-7, 0.21650629, -0.37499988), (-0.09705725, 0.21650629, -0.36222202), (-0.18750004, 0.21650629, -0.32475936), (-0.26516512, 0.21650629, -0.26516482), (-0.3247595, 0.21650629, -0.18749979), (-0.3622221, 0.21650629, -0.097056955), (-0.37499988, 0.21650629, 1.4603035e-7), (-0.36222205, 0.21650629, 0.09705723), (-0.32475936, 0.21650629, 0.18750003), (-0.26516488, 0.21650629, 0.26516503), (-0.18749988, 0.21650629, 0.32475945), (-0.09705707, 0.21650629, 0.36222208), (2.8311703e-8, 0.21650629, 0.37499988), (0.09705712, 0.21650629, 0.36222208), (0.18749993, 0.21650629, 0.32475945), (0.26516494, 0.21650629, 0.26516494), (0.32475942, 0.21650629, 0.18749994), (0.36222208, 0.21650629, 0.09705711), (0.49999985, 0.25, -3.8941425e-7), (0.48296267, 0.25, -0.12940983), (0.43301243, 0.25, -0.2500002), (0.35355306, 0.25, -0.3535535), (0.24999967, 0.25, -0.43301272), (0.12940922, 0.25, -0.48296282), (-2.3245607e-7, 0.25, -0.49999985), (-0.12940967, 0.25, -0.4829627), (-0.25000006, 0.25, -0.4330125), (-0.35355347, 0.25, -0.3535531), (-0.4330127, 0.25, -0.24999972), (-0.48296282, 0.25, -0.12940927), (-0.49999985, 0.25, 1.9470713e-7), (-0.48296273, 0.25, 0.12940964), (-0.43301252, 0.25, 0.25000003), (-0.35355318, 0.25, 0.35355335), (-0.24999985, 0.25, 0.43301263), (-0.12940942, 0.25, 0.4829628), (3.774894e-8, 0.25, 0.49999985), (0.12940949, 0.25, 0.48296276), (0.24999991, 0.25, 0.4330126), (0.35355327, 0.25, 0.35355327), (0.43301257, 0.25, 0.24999993), (0.48296276, 0.25, 0.12940948), (0.6249998, 0.21650644, -4.867678e-7), (0.6037033, 0.21650644, -0.1617623), (0.54126555, 0.21650644, -0.31250027), (0.44194135, 0.21650644, -0.44194192), (0.31249958, 0.21650644, -0.5412659), (0.16176154, 0.21650644, -0.60370356), (-2.9057009e-7, 0.21650644, -0.6249998), (-0.1617621, 0.21650644, -0.6037034), (-0.3125001, 0.21650644, -0.5412656), (-0.44194186, 0.21650644, -0.44194138), (-0.54126585, 0.21650644, -0.31249964), (-0.60370356, 0.21650644, -0.1617616), (-0.6249998, 0.21650644, 2.433839e-7), (-0.60370344, 0.21650644, 0.16176206), (-0.54126567, 0.21650644, 0.31250006), (-0.4419415, 0.21650644, 0.4419417), (-0.31249982, 0.21650644, 0.5412658), (-0.16176178, 0.21650644, 0.6037035), (4.7186173e-8, 0.21650644, 0.6249998), (0.16176188, 0.21650644, 0.60370344), (0.31249988, 0.21650644, 0.5412657), (0.44194162, 0.21650644, 0.44194162), (0.5412657, 0.21650644, 0.3124999), (0.60370344, 0.21650644, 0.16176185), (0.71650624, 0.12500018, -5.5803565e-7), (0.69209176, 0.12500018, -0.18544598), (0.62051237, 0.12500018, -0.35825354), (0.5066461, 0.12500018, -0.50664675), (0.35825276, 0.12500018, -0.6205128), (0.1854451, 0.12500018, -0.69209194), (-3.3311255e-7, 0.12500018, -0.71650624), (-0.18544574, 0.12500018, -0.69209176), (-0.35825333, 0.12500018, -0.6205125), (-0.5066467, 0.12500018, -0.50664616), (-0.6205128, 0.12500018, -0.35825282), (-0.69209194, 0.12500018, -0.18544516), (-0.71650624, 0.12500018, 2.7901783e-7), (-0.6920918, 0.12500018, 0.1854457), (-0.6205125, 0.12500018, 0.3582533), (-0.5066463, 0.12500018, 0.5066465), (-0.358253, 0.12500018, 0.62051266), (-0.18544537, 0.12500018, 0.69209194), (5.4094716e-8, 0.12500018, 0.71650624), (0.18544549, 0.12500018, 0.6920919), (0.3582531, 0.12500018, 0.62051266), (0.5066464, 0.12500018, 0.5066464), (0.6205126, 0.12500018, 0.35825312), (0.6920919, 0.12500018, 0.18544546)] (
            interpolation = "vertex"
        )
        color3f[] primvars:displayColor = [(0.75, -2.1855694e-8, -5.8412155e-7), (0.7244442, -2.1855694e-8, -0.19411482), (0.64951885, -2.1855694e-8, -0.37500045), (0.53032976, -2.1855694e-8, -0.5303304), (0.3749996, -2.1855694e-8, -0.64951926), (0.19411391, -2.1855694e-8, -0.72444445), (-3.486842e-7, -2.1855694e-8, -0.75), (-0.19411457, -2.1855694e-8, -0.72444427), (-0.37500024, -2.1855694e-8, -0.6495189), (-0.5303304, -2.1855694e-8, -0.5303298), (-0.6495192, -2.1855694e-8, -0.3749997), (-0.72444445, -2.1855694e-8, -0.19411397), (-0.75, -2.1855694e-8, 2.9206078e-7), (-0.7244443, -2.1855694e-8, 0.19411454), (-0.64951897, -2.1855694e-8, 0.37500018), (-0.53032994, -2.1855694e-8, 0.5303302), (-0.37499988, -2.1855694e-8, 0.64951915), (-0.1941142, -2.1855694e-8, 0.7244444), (5.6623428e-8, -2.1855694e-8, 0.75), (0.1941143, -2.1855694e-8, 0.7244444), (0.37499997, -2.1855694e-8, 0.6495191), (0.53033006, -2.1855694e-8, 0.53033006), (0.649519, -2.1855694e-8, 0.375), (0.7244444, -2.1855694e-8, 0.19411428), (0.7165063, -0.12500004, -5.580357e-7), (0.6920918, -0.12500004, -0.185446), (0.6205124, -0.12500004, -0.35825357), (0.50664616, -0.12500004, -0.5066468), (0.3582528, -0.12500004, -0.62051284), (0.18544511, -0.12500004, -0.692092), (-3.3311258e-7, -0.12500004, -0.7165063), (-0.18544576, -0.12500004, -0.6920918), (-0.35825336, -0.12500004, -0.62051255), (-0.50664675, -0.12500004, -0.5066462), (-0.62051284, -0.12500004, -0.35825285), (-0.692092, -0.12500004, -0.18544517), (-0.7165063, -0.12500004, 2.7901785e-7), (-0.6920919, -0.12500004, 0.18544571), (-0.62051255, -0.12500004, 0.35825333), (-0.50664634, -0.12500004, 0.5066466), (-0.35825303, -0.12500004, 0.6205127), (-0.18544538, -0.12500004, 0.692092), (5.4094723e-8, -0.12500004, 0.7165063), (0.1854455, -0.12500004, 0.69209194), (0.35825312, -0.12500004, 0.62051266), (0.50664645, -0.12500004, 0.50664645), (0.62051266, -0.12500004, 0.35825315), (0.69209194, -0.12500004, 0.18544547), (0.625, -0.21650636, -4.8676793e-7), (0.6037035, -0.21650636, -0.16176236), (0.54126567, -0.21650636, -0.31250036), (0.44194147, -0.21650636, -0.44194204), (0.31249967, -0.21650636, -0.5412661), (0.16176158, -0.21650636, -0.60370374), (-2.9057017e-7, -0.21650636, -0.625), (-0.16176215, -0.21650636, -0.60370356), (-0.31250018, -0.21650636, -0.5412657), (-0.44194198, -0.21650636, -0.4419415), (-0.541266, -0.21650636, -0.31249973), (-0.60370374, -0.21650636, -0.16176164), (-0.625, -0.21650636, 2.4338397e-7), (-0.6037036, -0.21650636, 0.1617621), (-0.5412658, -0.21650636, 0.31250015), (-0.44194162, -0.21650636, 0.44194186), (-0.3124999, -0.21650636, 0.54126596), (-0.16176182, -0.21650636, 0.6037037), (4.7186187e-8, -0.21650636, 0.625), (0.16176192, -0.21650636, 0.6037036), (0.31249997, -0.21650636, 0.5412659), (0.44194174, -0.21650636, 0.44194174), (0.54126585, -0.21650636, 0.3125), (0.6037036, -0.21650636, 0.16176191), (0.5, -0.25, -3.8941437e-7), (0.48296282, -0.25, -0.12940988), (0.43301255, -0.25, -0.2500003), (0.35355318, -0.25, -0.35355362), (0.24999975, -0.25, -0.43301284), (0.12940927, -0.25, -0.48296297), (-2.3245614e-7, -0.25, -0.5), (-0.12940972, -0.25, -0.48296285), (-0.25000015, -0.25, -0.4330126), (-0.3535536, -0.25, -0.3535532), (-0.4330128, -0.25, -0.24999979), (-0.48296297, -0.25, -0.12940931), (-0.5, -0.25, 1.9470718e-7), (-0.48296288, -0.25, 0.12940969), (-0.43301263, -0.25, 0.25000012), (-0.3535533, -0.25, 0.35355347), (-0.24999993, -0.25, 0.43301275), (-0.12940946, -0.25, 0.48296294), (3.774895e-8, -0.25, 0.5), (0.12940954, -0.25, 0.4829629), (0.24999999, -0.25, 0.43301272), (0.35355338, -0.25, 0.35355338), (0.4330127, -0.25, 0.25), (0.4829629, -0.25, 0.12940952), (0.37500003, -0.21650636, -2.920608e-7), (0.36222214, -0.21650636, -0.09705742), (0.32475942, -0.21650636, -0.18750024), (0.2651649, -0.21650636, -0.26516524), (0.18749982, -0.21650636, -0.32475966), (0.09705696, -0.21650636, -0.36222225), (-1.7434212e-7, -0.21650636, -0.37500003), (-0.0970573, -0.21650636, -0.36222216), (-0.18750013, -0.21650636, -0.32475948), (-0.2651652, -0.21650636, -0.2651649), (-0.32475963, -0.21650636, -0.18749985), (-0.36222225, -0.21650636, -0.09705699), (-0.37500003, -0.21650636, 1.460304e-7), (-0.3622222, -0.21650636, 0.097057275), (-0.3247595, -0.21650636, 0.1875001), (-0.265165, -0.21650636, 0.26516512), (-0.18749996, -0.21650636, 0.3247596), (-0.097057104, -0.21650636, 0.36222222), (2.8311716e-8, -0.21650636, 0.37500003), (0.09705716, -0.21650636, 0.3622222), (0.1875, -0.21650636, 0.32475957), (0.26516506, -0.21650636, 0.26516506), (0.32475954, -0.21650636, 0.18750001), (0.3622222, -0.21650636, 0.09705715), (0.28349367, -0.12500004, -2.2079301e-7), (0.2738338, -0.12500004, -0.073373765), (0.24551263, -0.12500004, -0.141747), (0.20046018, -0.12500004, -0.20046043), (0.14174668, -0.12500004, -0.2455128), (0.073373415, -0.12500004, -0.27383387), (-1.317997e-7, -0.12500004, -0.28349367), (-0.07337367, -0.12500004, -0.2738338), (-0.14174692, -0.12500004, -0.24551266), (-0.2004604, -0.12500004, -0.2004602), (-0.24551278, -0.12500004, -0.14174671), (-0.27383387, -0.12500004, -0.073373444), (-0.28349367, -0.12500004, 1.10396506e-7), (-0.27383384, -0.12500004, 0.07337365), (-0.24551268, -0.12500004, 0.14174691), (-0.20046024, -0.12500004, 0.20046034), (-0.14174679, -0.12500004, 0.24551275), (-0.07337353, -0.12500004, 0.27383387), (2.1403176e-8, -0.12500004, 0.28349367), (0.07337357, -0.12500004, 0.27383384), (0.14174682, -0.12500004, 0.24551272), (0.20046028, -0.12500004, 0.20046028), (0.24551271, -0.12500004, 0.14174683), (0.27383384, -0.12500004, 0.07337356), (0.25, -7.54979e-8, -1.9470718e-7), (0.24148141, -7.54979e-8, -0.06470494), (0.21650627, -7.54979e-8, -0.12500015), (0.17677659, -7.54979e-8, -0.17677681), (0.12499987, -7.54979e-8, -0.21650642), (0.064704634, -7.54979e-8, -0.24148148), (-1.1622807e-7, -7.54979e-8, -0.25), (-0.06470486, -7.54979e-8, -0.24148142), (-0.12500007, -7.54979e-8, -0.2165063), (-0.1767768, -7.54979e-8, -0.1767766), (-0.2165064, -7.54979e-8, -0.124999896), (-0.24148148, -7.54979e-8, -0.06470466), (-0.25, -7.54979e-8, 9.735359e-8), (-0.24148144, -7.54979e-8, 0.06470484), (-0.21650632, -7.54979e-8, 0.12500006), (-0.17677665, -7.54979e-8, 0.17677674), (-0.12499996, -7.54979e-8, 0.21650638), (-0.06470473, -7.54979e-8, 0.24148147), (1.8874475e-8, -7.54979e-8, 0.25), (0.06470477, -7.54979e-8, 0.24148145), (0.12499999, -7.54979e-8, 0.21650636), (0.17677669, -7.54979e-8, 0.17677669), (0.21650635, -7.54979e-8, 0.125), (0.24148145, -7.54979e-8, 0.06470476), (0.28349358, 0.12499991, -2.2079294e-7), (0.27383372, 0.12499991, -0.07337374), (0.24551255, 0.12499991, -0.14174695), (0.2004601, 0.12499991, -0.20046036), (0.14174664, 0.12499991, -0.24551272), (0.07337339, 0.12499991, -0.2738338), (-1.3179965e-7, 0.12499991, -0.28349358), (-0.073373646, 0.12499991, -0.27383372), (-0.14174688, 0.12499991, -0.24551259), (-0.20046034, 0.12499991, -0.20046012), (-0.24551271, 0.12499991, -0.14174667), (-0.2738338, 0.12499991, -0.07337342), (-0.28349358, 0.12499991, 1.1039647e-7), (-0.27383375, 0.12499991, 0.07337363), (-0.2455126, 0.12499991, 0.14174686), (-0.20046018, 0.12499991, 0.20046028), (-0.14174674, 0.12499991, 0.24551266), (-0.073373504, 0.12499991, 0.27383378), (2.140317e-8, 0.12499991, 0.28349358), (0.07337355, 0.12499991, 0.27383375), (0.14174677, 0.12499991, 0.24551265), (0.20046023, 0.12499991, 0.20046023), (0.24551263, 0.12499991, 0.14174679), (0.27383375, 0.12499991, 0.073373534), (0.37499988, 0.21650629, -2.920607e-7), (0.362222, 0.21650629, -0.09705738), (0.3247593, 0.21650629, -0.18750016), (0.2651648, 0.21650629, -0.26516512), (0.18749975, 0.21650629, -0.32475954), (0.09705692, 0.21650629, -0.3622221), (-1.7434205e-7, 0.21650629, -0.37499988), (-0.09705725, 0.21650629, -0.36222202), (-0.18750004, 0.21650629, -0.32475936), (-0.26516512, 0.21650629, -0.26516482), (-0.3247595, 0.21650629, -0.18749979), (-0.3622221, 0.21650629, -0.097056955), (-0.37499988, 0.21650629, 1.4603035e-7), (-0.36222205, 0.21650629, 0.09705723), (-0.32475936, 0.21650629, 0.18750003), (-0.26516488, 0.21650629, 0.26516503), (-0.18749988, 0.21650629, 0.32475945), (-0.09705707, 0.21650629, 0.36222208), (2.8311703e-8, 0.21650629, 0.37499988), (0.09705712, 0.21650629, 0.36222208), (0.18749993, 0.21650629, 0.32475945), (0.26516494, 0.21650629, 0.26516494), (0.32475942, 0.21650629, 0.18749994), (0.36222208, 0.21650629, 0.09705711), (0.49999985, 0.25, -3.8941425e-7), (0.48296267, 0.25, -0.12940983), (0.43301243, 0.25, -0.2500002), (0.35355306, 0.25, -0.3535535), (0.24999967, 0.25, -0.43301272), (0.12940922, 0.25, -0.48296282), (-2.3245607e-7, 0.25, -0.49999985), (-0.12940967, 0.25, -0.4829627), (-0.25000006, 0.25, -0.4330125), (-0.35355347, 0.25, -0.3535531), (-0.4330127, 0.25, -0.24999972), (-0.48296282, 0.25, -0.12940927), (-0.49999985, 0.25, 1.9470713e-7), (-0.48296273, 0.25, 0.12940964), (-0.43301252, 0.25, 0.25000003), (-0.35355318, 0.25, 0.35355335), (-0.24999985, 0.25, 0.43301263), (-0.12940942, 0.25, 0.4829628), (3.774894e-8, 0.25, 0.49999985), (0.12940949, 0.25, 0.48296276), (0.24999991, 0.25, 0.4330126), (0.35355327, 0.25, 0.35355327), (0.43301257, 0.25, 0.24999993), (0.48296276, 0.25, 0.12940948), (0.6249998, 0.21650644, -4.867678e-7), (0.6037033, 0.21650644, -0.1617623), (0.54126555, 0.21650644, -0.31250027), (0.44194135, 0.21650644, -0.44194192), (0.31249958, 0.21650644, -0.5412659), (0.16176154, 0.21650644, -0.60370356), (-2.9057009e-7, 0.21650644, -0.6249998), (-0.1617621, 0.21650644, -0.6037034), (-0.3125001, 0.21650644, -0.5412656), (-0.44194186, 0.21650644, -0.44194138), (-0.54126585, 0.21650644, -0.31249964), (-0.60370356, 0.21650644, -0.1617616), (-0.6249998, 0.21650644, 2.433839e-7), (-0.60370344, 0.21650644, 0.16176206), (-0.54126567, 0.21650644, 0.31250006), (-0.4419415, 0.21650644, 0.4419417), (-0.31249982, 0.21650644, 0.5412658), (-0.16176178, 0.21650644, 0.6037035), (4.7186173e-8, 0.21650644, 0.6249998), (0.16176188, 0.21650644, 0.60370344), (0.31249988, 0.21650644, 0.5412657), (0.44194162, 0.21650644, 0.44194162), (0.5412657, 0.21650644, 0.3124999), (0.60370344, 0.21650644, 0.16176185), (0.71650624, 0.12500018, -5.5803565e-7), (0.69209176, 0.12500018, -0.18544598), (0.62051237, 0.12500018, -0.35825354), (0.5066461, 0.12500018, -0.50664675), (0.35825276, 0.12500018, -0.6205128), (0.1854451, 0.12500018, -0.69209194), (-3.3311255e-7, 0.12500018, -0.71650624), (-0.18544574, 0.12500018, -0.69209176), (-0.35825333, 0.12500018, -0.6205125), (-0.5066467, 0.12500018, -0.50664616), (-0.6205128, 0.12500018, -0.35825282), (-0.69209194, 0.12500018, -0.18544516), (-0.71650624, 0.12500018, 2.7901783e-7), (-0.6920918, 0.12500018, 0.1854457), (-0.6205125, 0.12500018, 0.3582533), (-0.5066463, 0.12500018, 0.5066465), (-0.358253, 0.12500018, 0.62051266), (-0.18544537, 0.12500018, 0.69209194), (5.4094716e-8, 0.12500018, 0.71650624), (0.18544549, 0.12500018, 0.6920919), (0.3582531, 0.12500018, 0.62051266), (0.5066464, 0.12500018, 0.5066464), (0.6205126, 0.12500018, 0.35825312), (0.6920919, 0.12500018, 0.18544546)] (
            interpolation = "vertex"
        )
        int[] primvars:displayColor:indices = None
        uniform token subdivisionScheme = "none"
    }
}

def Xform "lights"
{
    def DistantLight "distantlight1" (
        prepend apiSchemas = ["HoudiniViewportGuideAPI"]
    )
    {
        float houdini:guidescale = 1
        bool houdini:inviewermenu = 1
        float inputs:angle = 0.53
        color3f inputs:color = (1, 1, 1)
        float inputs:diffuse = 1
        bool inputs:enableColorTemperature = 0
        float inputs:exposure = 0
        float inputs:intensity = 1
        bool inputs:normalize = 1
        float inputs:specular = 1
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def Scope "materials"
{
    def ArnoldNodeGraph "aov_shaders"
    {
        custom int _delegate_update
        token outputs:aov_shaders:i1.connect = </materials/aov_shaders/aov_write_rgb1.outputs:shader>
        token outputs:aov_shaders:i2.connect = </materials/aov_shaders/aov_write_rgb2.outputs:shader>

        def Shader "aov_write_rgb1"
        {
            uniform token info:id = "arnold:aov_write_rgb"
            color3f inputs:aov_input = (0, 0.5, 0.5)
            string inputs:aov_name = "custom"
            bool inputs:blend_opacity = 1
            string inputs:passthrough = ""
            token outputs:shader
        }

        def Shader "aov_write_rgb2"
        {
            uniform token info:id = "arnold:aov_write_rgb"
            color3f inputs:aov_input = (1, 0, 0)
            color3f inputs:aov_input.connect = </materials/aov_shaders/user_data_rgb1.outputs:rgb>
            string inputs:aov_name = "custom1"
            bool inputs:blend_opacity = 1
            string inputs:passthrough = ""
            token outputs:shader
        }

        def Shader "user_data_rgb1"
        {
            uniform token info:id = "arnold:user_data_rgb"
            string inputs:attribute = "displayColor"
            color3f inputs:default = (0, 0, 1)
            color3f outputs:rgb
        }
    }

    def ArnoldNodeGraph "aov_shaders1"
    {
        custom int _delegate_update
        token outputs:aov_shaders:i1.connect = </materials/aov_shaders1/aov_write_rgb1.outputs:shader>

        def Shader "aov_write_rgb1"
        {
            uniform token info:id = "arnold:aov_write_rgb"
            color3f inputs:aov_input = (0.5, 0.5, 0)
            string inputs:aov_name = "custom2"
            bool inputs:blend_opacity = 1
            string inputs:passthrough = ""
            token outputs:shader
        }
    }
}

def Scope "Render"
{
    def Scope "Products"
    {
        def Scope "Vars"
        {
            def RenderVar "beauty"
            {
                token dataType = "color3f"
                custom string driver:parameters:aov:channel_prefix = ""
                custom int driver:parameters:aov:clearValue = 0
                custom token driver:parameters:aov:format = "color4f"
                custom bool driver:parameters:aov:multiSampled = 0
                custom string driver:parameters:aov:name = "RGBA"
                string sourceName = "RGBA"
                token sourceType = "raw"
            }

            def RenderVar "normals"
            {
                token dataType = "color3f"
                custom string driver:parameters:aov:channel_prefix = ""
                custom int driver:parameters:aov:clearValue = 0
                custom token driver:parameters:aov:format = "color3f"
                custom bool driver:parameters:aov:multiSampled = 0
                custom string driver:parameters:aov:name = "normals"
                string sourceName = "N"
                token sourceType = "raw"
            }

            def RenderVar "custom"
            {
                token dataType = "color3f"
                custom string driver:parameters:aov:channel_prefix = ""
                custom int driver:parameters:aov:clearValue = 0
                custom token driver:parameters:aov:format = "color3f"
                custom bool driver:parameters:aov:multiSampled = 0
                custom string driver:parameters:aov:name = "custom"
                string sourceName = "custom"
                token sourceType = "raw"
            }

            def RenderVar "custom1"
            {
                token dataType = "color3f"
                custom string driver:parameters:aov:channel_prefix = ""
                custom int driver:parameters:aov:clearValue = 0
                custom token driver:parameters:aov:format = "color3f"
                custom bool driver:parameters:aov:multiSampled = 0
                custom string driver:parameters:aov:name = "custom1"
                string sourceName = "custom1"
                token sourceType = "raw"
            }

            def RenderVar "custom2"
            {
                token dataType = "color3f"
                custom string driver:parameters:aov:channel_prefix = ""
                custom int driver:parameters:aov:clearValue = 0
                custom token driver:parameters:aov:format = "color3f"
                custom bool driver:parameters:aov:multiSampled = 0
                custom string driver:parameters:aov:name = "custom2"
                string sourceName = "custom2"
                token sourceType = "raw"
            }
        }

        def RenderProduct "renderproduct1"
        {
            rel orderedVars = [
                </Render/Products/Vars/normals>,
                </Render/Products/Vars/beauty>,
                </Render/Products/Vars/custom>,
                </Render/Products/Vars/custom1>,
                </Render/Products/Vars/custom2>,
            ]
            token productName = "testrender.exr"
            token productType = "raster"
        }
    }

    def RenderSettings "rendersettings1"
    {
        custom int arnold:global:AA_seed
        int arnold:global:AA_seed.timeSamples = {
            1: 1,
        }
        custom string arnold:global:aov_shaders = "/materials/aov_shaders1 /materials/aov_shaders"
        token aspectRatioConformPolicy = "expandAperture"
        rel camera = </cameras/camera1>
        float4 dataWindowNDC = (0, 0, 1, 1)
        token[] includedPurposes = ["default"]
        bool instantaneousShutter = 0
        token[] materialBindingPurposes = ["full", "allPurpose"]
        float pixelAspectRatio = 1
        rel products = </Render/Products/renderproduct1>
        int2 resolution = (160, 120)
    }
}

