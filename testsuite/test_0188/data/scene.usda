#usda 1.0


def ArnoldOptions "options"
{
    int arnold:AA_samples = 3
    int arnold:AA_seed = 105
    string arnold:camera = "/persp/perspShape1"
    float arnold:frame.timeSamples = {
        105: 105,
    }
    int arnold:GI_diffuse_depth = 1
    int arnold:GI_specular_depth = 1
    int arnold:GI_transmission_depth = 8
    float arnold:meters_per_unit = 0.01
    string arnold:name = "options"
    string[] arnold:outputs = ["RGBA RGBA myfilter mydriver"]
    bool arnold:texture_automip = 0
    bool arnold:texture_per_file_stats = 1
    int arnold:threads = 64
    int arnold:xres = 160
    int arnold:yres = 120
    string primvars:render_layer = "defaultRenderLayer" (
        elementSize = 1
        interpolation = "constant"
    )
}

def "defaultArnoldFilter"
{
    def ArnoldGaussianFilter "gaussian_filter"
    {
        string arnold:name = "myfilter"
    }
}

def "defaultArnoldDriver"
{
    def ArnoldDriverTiff "driver_tif_RGBA"
    {
        string arnold:filename = "testrender.tif"
        string arnold:name = "mydriver"
    }
}

def Xform "persp"
{
    def Camera "perspShape"
    {
        float2 clippingRange = (0.1, 10000)
        float focusDistance = 1
        float horizontalAperture = 51.428566
        float[] primvars:arnold:aperture_size = [0]
 
        vector3f[] primvars:arnold:look_at = [(0, 0, -1)]
        float primvars:arnold:motion_end = 0.5
        float primvars:arnold:motion_start = -0.5
        vector3f[] primvars:arnold:position = [(0, 0, 0)]
        float2[] primvars:arnold:screen_window_max = [(1, 1)]
        float2[] primvars:arnold:screen_window_min = [(-1, -1)]
        vector3f[] primvars:arnold:up = [(0, 1, 0)]
        color4f primvars:arnold:uv_remap = (0, 0, 0, 1)
        string primvars:dcc_name = "perspShape" (
            elementSize = 1
            interpolation = "constant"
        )
        token projection = "perspective"
        double shutter:close = 1.5
        double shutter:open = -1.5
        float verticalAperture = 28.928568
        matrix4d xformOp:transform = ( ( -0.0244321786, 2.77555756e-17, 0.9997015, 0), (0.264439672, 0.964380562, 0.00646276679, 0), (-0.964092672, 0.264518648, -0.0235619172, 0), (-1385.56921,  358.518799, -17.2538433, 1) )
        
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def Xform "aiSkyDomeLight1"
{
    def DomeLight "aiSkyDomeLightShape1"
    {
        color3f inputs:color = (1, 1, 1)
        float inputs:diffuse = 1
        float inputs:exposure = 0
        float inputs:intensity = 1
        float inputs:specular = 1
        token inputs:texture:format = "latlong"
        float primvars:arnold:motion_end = 0.5
        float primvars:arnold:motion_start = -0.5
        string primvars:dcc_name = "aiSkyDomeLightShape1" (
            elementSize = 1
            interpolation = "constant"
        )
    }
}

def "native_instance_cubes_001" (
    prepend references = @native_instance_cubes.usd@
)
{
    double3 xformOp:translate = (0, 0, 300)
    uniform token[] xformOpOrder = ["xformOp:translate"]
}
