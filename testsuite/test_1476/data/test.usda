#usda 1.0
(
    defaultPrim = "sopcreate1"
    endTimeCode = 1
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "sopcreate1" (
    kind = "component"
)
{
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Mesh "mesh_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        float3[] extent.timeSamples = {
            -8e-9: [(-0.5, -5, -0.5), (0.5, 5, 0.5)],
            0.1: [(-2.0206132, -4.9097915, -0.5), (2.0206132, 4.9097915, 0.5)],
            0.2: [(-3.3434348, -4.338978, -0.5), (3.3434348, 4.338978, 0.5)],
            0.3: [(-4.338978, -3.3434348, -0.5), (4.338978, 3.3434348, 0.5)],
            0.4: [(-4.9097915, -2.0206132, -0.5), (4.9097915, 2.0206132, 0.5)],
            0.5: [(-5, -0.5, -0.5), (5, 0.5, 0.5)],
            0.6: [(-4.9097915, -2.0206132, -0.5), (4.9097915, 2.0206132, 0.5)],
            0.7: [(-4.338978, -3.3434348, -0.5), (4.338978, 3.3434348, 0.5)],
            0.8: [(-3.3434348, -4.338978, -0.5), (3.3434348, 4.338978, 0.5)],
            0.9: [(-2.0206132, -4.9097915, -0.5), (2.0206132, 4.9097915, 0.5)],
            1: [(-0.5, -5, -0.5), (0.5, 5, 0.5)],
            1.1: [(-2.0206132, -4.9097915, -0.5), (2.0206132, 4.9097915, 0.5)],
            1.2: [(-3.3434348, -4.338978, -0.5), (3.3434348, 4.338978, 0.5)],
            1.3: [(-4.338978, -3.3434348, -0.5), (4.338978, 3.3434348, 0.5)],
            1.4: [(-4.9097915, -2.0206132, -0.5), (4.9097915, 2.0206132, 0.5)],
            1.5: [(-5, -0.5, -0.5), (5, 0.5, 0.5)],
            1.6: [(-4.9097915, -2.0206132, -0.5), (4.9097915, 2.0206132, 0.5)],
            1.7: [(-4.338978, -3.3434348, -0.5), (4.338978, 3.3434348, 0.5)],
            1.8: [(-3.3434348, -4.338978, -0.5), (3.3434348, 4.338978, 0.5)],
            1.9: [(-2.0206132, -4.9097915, -0.5), (2.0206132, 4.9097915, 0.5)],
            2: [(-0.5, -5, -0.5), (0.5, 5, 0.5)],
        }
        int[] faceVertexCounts.timeSamples = {
            -8e-9: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            0.1: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            0.2: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            0.3: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            0.4: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            0.5: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            0.6: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            0.7: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            0.8: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            0.9: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1.1: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1.2: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1.3: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1.4: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1.5: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1.6: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1.7: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1.8: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            1.9: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            2: [12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
        }
        int[] faceVertexIndices.timeSamples = {
            -8e-9: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            0.1: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            0.2: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            0.3: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            0.4: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            0.5: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            0.6: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            0.7: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            0.8: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            0.9: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1.1: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1.2: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1.3: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1.4: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1.5: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1.6: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1.7: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1.8: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            1.9: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
            2: [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23],
        }
        rel material:binding = </materials/arnold_materialbuilder1>
        uniform token orientation = "leftHanded"
        point3f[] points (
            interpolation = "vertex"
        )
        point3f[] points.timeSamples = {
            -8e-9: [(0.5, 5, 0), (0.4330127, 5, -0.25), (0.24999999, 5, -0.43301272), (-2.1855694e-8, 5, -0.5), (-0.25000003, 5, -0.4330127), (-0.4330127, 5, -0.25000003), (-0.5, 5, 4.371139e-8), (-0.43301263, 5, 0.2500001), (-0.24999996, 5, 0.43301272), (5.9624403e-9, 5, 0.5), (0.24999996, 5, 0.43301272), (0.43301278, 5, 0.24999988), (0.5, -5, 0), (0.4330127, -5, -0.25), (0.24999999, -5, -0.43301272), (-2.1855694e-8, -5, -0.5), (-0.25000003, -5, -0.4330127), (-0.4330127, -5, -0.25000003), (-0.5, -5, 4.371139e-8), (-0.43301263, -5, 0.2500001), (-0.24999996, -5, 0.43301272), (5.9624403e-9, -5, 0.5), (0.24999996, -5, 0.43301272), (0.43301278, -5, 0.24999988)],
            0.1: [(2.0206132, 4.6007743, 0), (1.9569045, 4.6214747, -0.25), (1.7828491, 4.6780286, -0.43301272), (1.545085, 4.755283, -0.5), (1.3073208, 4.832537, -0.4330127), (1.1332654, 4.889091, -0.25000003), (1.0695567, 4.9097915, 4.371139e-8), (1.1332655, 4.889091, 0.2500001), (1.3073208, 4.832537, 0.43301272), (1.545085, 4.755283, 0.5), (1.7828491, 4.6780286, 0.43301272), (1.9569046, 4.6214747, 0.24999988), (-1.0695567, -4.9097915, 0), (-1.1332654, -4.889091, -0.25), (-1.3073208, -4.832537, -0.43301272), (-1.545085, -4.755283, -0.5), (-1.7828491, -4.6780286, -0.4330127), (-1.9569045, -4.6214747, -0.25000003), (-2.0206132, -4.6007743, 4.371139e-8), (-1.9569044, -4.6214747, 0.2500001), (-1.7828491, -4.6780286, 0.43301272), (-1.545085, -4.755283, 0.5), (-1.3073208, -4.832537, 0.43301272), (-1.1332653, -4.889091, 0.24999988)],
            0.2: [(3.3434348, 3.7511923, 0), (3.2892408, 3.7905664, -0.25), (3.1411805, 3.8981388, -0.43301272), (2.9389262, 4.045085, -0.5), (2.736672, 4.1920314, -0.4330127), (2.5886116, 4.2996035, -0.25000003), (2.5344176, 4.338978, 4.371139e-8), (2.5886116, 4.2996035, 0.2500001), (2.736672, 4.1920314, 0.43301272), (2.9389262, 4.045085, 0.5), (3.1411805, 3.8981388, 0.43301272), (3.2892408, 3.7905664, 0.24999988), (-2.5344176, -4.338978, 0), (-2.5886116, -4.2996035, -0.25), (-2.736672, -4.1920314, -0.43301272), (-2.9389262, -4.045085, -0.5), (-3.1411805, -3.8981385, -0.4330127), (-3.2892408, -3.7905664, -0.25000003), (-3.3434348, -3.7511923, 4.371139e-8), (-3.2892408, -3.7905664, 0.2500001), (-3.1411805, -3.8981388, 0.43301272), (-2.9389262, -4.045085, 0.5), (-2.736672, -4.1920314, 0.43301272), (-2.5886116, -4.2996035, 0.24999988)],
            0.3: [(4.338978, 2.5344176, 0), (4.2996035, 2.5886116, -0.25), (4.1920314, 2.736672, -0.43301272), (4.045085, 2.9389262, -0.5), (3.8981385, 3.1411805, -0.4330127), (3.7905664, 3.2892408, -0.25000003), (3.7511923, 3.3434348, 4.371139e-8), (3.7905664, 3.2892408, 0.2500001), (3.8981388, 3.1411805, 0.43301272), (4.045085, 2.9389262, 0.5), (4.1920314, 2.736672, 0.43301272), (4.2996035, 2.5886116, 0.24999988), (-3.7511923, -3.3434348, 0), (-3.7905664, -3.2892408, -0.25), (-3.8981388, -3.1411805, -0.43301272), (-4.045085, -2.9389262, -0.5), (-4.1920314, -2.736672, -0.4330127), (-4.2996035, -2.5886116, -0.25000003), (-4.338978, -2.5344176, 4.371139e-8), (-4.2996035, -2.5886116, 0.2500001), (-4.1920314, -2.736672, 0.43301272), (-4.045085, -2.9389262, 0.5), (-3.8981388, -3.1411805, 0.43301272), (-3.7905664, -3.2892408, 0.24999988)],
            0.4: [(4.9097915, 1.0695567, 0), (4.889091, 1.1332654, -0.25), (4.832537, 1.3073208, -0.43301272), (4.755283, 1.545085, -0.5), (4.6780286, 1.7828491, -0.4330127), (4.6214747, 1.9569045, -0.25000003), (4.6007743, 2.0206132, 4.371139e-8), (4.6214747, 1.9569044, 0.2500001), (4.6780286, 1.7828491, 0.43301272), (4.755283, 1.545085, 0.5), (4.832537, 1.3073208, 0.43301272), (4.889091, 1.1332653, 0.24999988), (-4.6007743, -2.0206132, 0), (-4.6214747, -1.9569045, -0.25), (-4.6780286, -1.7828491, -0.43301272), (-4.755283, -1.545085, -0.5), (-4.832537, -1.3073208, -0.4330127), (-4.889091, -1.1332654, -0.25000003), (-4.9097915, -1.0695567, 4.371139e-8), (-4.889091, -1.1332655, 0.2500001), (-4.832537, -1.3073208, 0.43301272), (-4.755283, -1.545085, 0.5), (-4.6780286, -1.7828491, 0.43301272), (-4.6214747, -1.9569046, 0.24999988)],
            0.5: [(5, -0.5, 0), (5, -0.4330127, -0.25), (5, -0.24999999, -0.43301272), (5, 2.1855694e-8, -0.5), (5, 0.25000003, -0.4330127), (5, 0.4330127, -0.25000003), (5, 0.5, 4.371139e-8), (5, 0.43301263, 0.2500001), (5, 0.24999996, 0.43301272), (5, -5.9624403e-9, 0.5), (5, -0.24999996, 0.43301272), (5, -0.43301278, 0.24999988), (-5, -0.5, 0), (-5, -0.4330127, -0.25), (-5, -0.24999999, -0.43301272), (-5, 2.1855694e-8, -0.5), (-5, 0.25000003, -0.4330127), (-5, 0.4330127, -0.25000003), (-5, 0.5, 4.371139e-8), (-5, 0.43301263, 0.2500001), (-5, 0.24999996, 0.43301272), (-5, -5.9624403e-9, 0.5), (-5, -0.24999996, 0.43301272), (-5, -0.43301278, 0.24999988)],
            0.6: [(4.6007743, -2.0206132, 0), (4.6214747, -1.9569045, -0.25), (4.6780286, -1.7828491, -0.43301272), (4.755283, -1.545085, -0.5), (4.832537, -1.3073208, -0.4330127), (4.889091, -1.1332654, -0.25000003), (4.9097915, -1.0695567, 4.371139e-8), (4.889091, -1.1332655, 0.2500001), (4.832537, -1.3073208, 0.43301272), (4.755283, -1.545085, 0.5), (4.6780286, -1.7828491, 0.43301272), (4.6214747, -1.9569046, 0.24999988), (-4.9097915, 1.0695567, 0), (-4.889091, 1.1332654, -0.25), (-4.832537, 1.3073208, -0.43301272), (-4.755283, 1.545085, -0.5), (-4.6780286, 1.7828491, -0.4330127), (-4.6214747, 1.9569045, -0.25000003), (-4.6007743, 2.0206132, 4.371139e-8), (-4.6214747, 1.9569044, 0.2500001), (-4.6780286, 1.7828491, 0.43301272), (-4.755283, 1.545085, 0.5), (-4.832537, 1.3073208, 0.43301272), (-4.889091, 1.1332653, 0.24999988)],
            0.7: [(3.7511923, -3.3434348, 0), (3.7905664, -3.2892408, -0.25), (3.8981388, -3.1411805, -0.43301272), (4.045085, -2.9389262, -0.5), (4.1920314, -2.736672, -0.4330127), (4.2996035, -2.5886116, -0.25000003), (4.338978, -2.5344176, 4.371139e-8), (4.2996035, -2.5886116, 0.2500001), (4.1920314, -2.736672, 0.43301272), (4.045085, -2.9389262, 0.5), (3.8981388, -3.1411805, 0.43301272), (3.7905664, -3.2892408, 0.24999988), (-4.338978, 2.5344176, 0), (-4.2996035, 2.5886116, -0.25), (-4.1920314, 2.736672, -0.43301272), (-4.045085, 2.9389262, -0.5), (-3.8981385, 3.1411805, -0.4330127), (-3.7905664, 3.2892408, -0.25000003), (-3.7511923, 3.3434348, 4.371139e-8), (-3.7905664, 3.2892408, 0.2500001), (-3.8981388, 3.1411805, 0.43301272), (-4.045085, 2.9389262, 0.5), (-4.1920314, 2.736672, 0.43301272), (-4.2996035, 2.5886116, 0.24999988)],
            0.8: [(2.5344176, -4.338978, 0), (2.5886116, -4.2996035, -0.25), (2.736672, -4.1920314, -0.43301272), (2.9389262, -4.045085, -0.5), (3.1411805, -3.8981385, -0.4330127), (3.2892408, -3.7905664, -0.25000003), (3.3434348, -3.7511923, 4.371139e-8), (3.2892408, -3.7905664, 0.2500001), (3.1411805, -3.8981388, 0.43301272), (2.9389262, -4.045085, 0.5), (2.736672, -4.1920314, 0.43301272), (2.5886116, -4.2996035, 0.24999988), (-3.3434348, 3.7511923, 0), (-3.2892408, 3.7905664, -0.25), (-3.1411805, 3.8981388, -0.43301272), (-2.9389262, 4.045085, -0.5), (-2.736672, 4.1920314, -0.4330127), (-2.5886116, 4.2996035, -0.25000003), (-2.5344176, 4.338978, 4.371139e-8), (-2.5886116, 4.2996035, 0.2500001), (-2.736672, 4.1920314, 0.43301272), (-2.9389262, 4.045085, 0.5), (-3.1411805, 3.8981388, 0.43301272), (-3.2892408, 3.7905664, 0.24999988)],
            0.9: [(1.0695567, -4.9097915, 0), (1.1332654, -4.889091, -0.25), (1.3073208, -4.832537, -0.43301272), (1.545085, -4.755283, -0.5), (1.7828491, -4.6780286, -0.4330127), (1.9569045, -4.6214747, -0.25000003), (2.0206132, -4.6007743, 4.371139e-8), (1.9569044, -4.6214747, 0.2500001), (1.7828491, -4.6780286, 0.43301272), (1.545085, -4.755283, 0.5), (1.3073208, -4.832537, 0.43301272), (1.1332653, -4.889091, 0.24999988), (-2.0206132, 4.6007743, 0), (-1.9569045, 4.6214747, -0.25), (-1.7828491, 4.6780286, -0.43301272), (-1.545085, 4.755283, -0.5), (-1.3073208, 4.832537, -0.4330127), (-1.1332654, 4.889091, -0.25000003), (-1.0695567, 4.9097915, 4.371139e-8), (-1.1332655, 4.889091, 0.2500001), (-1.3073208, 4.832537, 0.43301272), (-1.545085, 4.755283, 0.5), (-1.7828491, 4.6780286, 0.43301272), (-1.9569046, 4.6214747, 0.24999988)],
            1: [(-0.5, -5, 0), (-0.4330127, -5, -0.25), (-0.24999999, -5, -0.43301272), (2.1855694e-8, -5, -0.5), (0.25000003, -5, -0.4330127), (0.4330127, -5, -0.25000003), (0.5, -5, 4.371139e-8), (0.43301263, -5, 0.2500001), (0.24999996, -5, 0.43301272), (-5.9624403e-9, -5, 0.5), (-0.24999996, -5, 0.43301272), (-0.43301278, -5, 0.24999988), (-0.5, 5, 0), (-0.4330127, 5, -0.25), (-0.24999999, 5, -0.43301272), (2.1855694e-8, 5, -0.5), (0.25000003, 5, -0.4330127), (0.4330127, 5, -0.25000003), (0.5, 5, 4.371139e-8), (0.43301263, 5, 0.2500001), (0.24999996, 5, 0.43301272), (-5.9624403e-9, 5, 0.5), (-0.24999996, 5, 0.43301272), (-0.43301278, 5, 0.24999988)],
            1.1: [(-2.0206132, -4.6007743, 0), (-1.9569045, -4.6214747, -0.25), (-1.7828491, -4.6780286, -0.43301272), (-1.545085, -4.755283, -0.5), (-1.3073208, -4.832537, -0.4330127), (-1.1332654, -4.889091, -0.25000003), (-1.0695567, -4.9097915, 4.371139e-8), (-1.1332655, -4.889091, 0.2500001), (-1.3073208, -4.832537, 0.43301272), (-1.545085, -4.755283, 0.5), (-1.7828491, -4.6780286, 0.43301272), (-1.9569046, -4.6214747, 0.24999988), (1.0695567, 4.9097915, 0), (1.1332654, 4.889091, -0.25), (1.3073208, 4.832537, -0.43301272), (1.545085, 4.755283, -0.5), (1.7828491, 4.6780286, -0.4330127), (1.9569045, 4.6214747, -0.25000003), (2.0206132, 4.6007743, 4.371139e-8), (1.9569044, 4.6214747, 0.2500001), (1.7828491, 4.6780286, 0.43301272), (1.545085, 4.755283, 0.5), (1.3073208, 4.832537, 0.43301272), (1.1332653, 4.889091, 0.24999988)],
            1.2: [(-3.3434348, -3.7511923, 0), (-3.2892408, -3.7905664, -0.25), (-3.1411805, -3.8981388, -0.43301272), (-2.9389262, -4.045085, -0.5), (-2.736672, -4.1920314, -0.4330127), (-2.5886116, -4.2996035, -0.25000003), (-2.5344176, -4.338978, 4.371139e-8), (-2.5886116, -4.2996035, 0.2500001), (-2.736672, -4.1920314, 0.43301272), (-2.9389262, -4.045085, 0.5), (-3.1411805, -3.8981388, 0.43301272), (-3.2892408, -3.7905664, 0.24999988), (2.5344176, 4.338978, 0), (2.5886116, 4.2996035, -0.25), (2.736672, 4.1920314, -0.43301272), (2.9389262, 4.045085, -0.5), (3.1411805, 3.8981385, -0.4330127), (3.2892408, 3.7905664, -0.25000003), (3.3434348, 3.7511923, 4.371139e-8), (3.2892408, 3.7905664, 0.2500001), (3.1411805, 3.8981388, 0.43301272), (2.9389262, 4.045085, 0.5), (2.736672, 4.1920314, 0.43301272), (2.5886116, 4.2996035, 0.24999988)],
            1.3: [(-4.338978, -2.5344176, 0), (-4.2996035, -2.5886116, -0.25), (-4.1920314, -2.736672, -0.43301272), (-4.045085, -2.9389262, -0.5), (-3.8981385, -3.1411805, -0.4330127), (-3.7905664, -3.2892408, -0.25000003), (-3.7511923, -3.3434348, 4.371139e-8), (-3.7905664, -3.2892408, 0.2500001), (-3.8981388, -3.1411805, 0.43301272), (-4.045085, -2.9389262, 0.5), (-4.1920314, -2.736672, 0.43301272), (-4.2996035, -2.5886116, 0.24999988), (3.7511923, 3.3434348, 0), (3.7905664, 3.2892408, -0.25), (3.8981388, 3.1411805, -0.43301272), (4.045085, 2.9389262, -0.5), (4.1920314, 2.736672, -0.4330127), (4.2996035, 2.5886116, -0.25000003), (4.338978, 2.5344176, 4.371139e-8), (4.2996035, 2.5886116, 0.2500001), (4.1920314, 2.736672, 0.43301272), (4.045085, 2.9389262, 0.5), (3.8981388, 3.1411805, 0.43301272), (3.7905664, 3.2892408, 0.24999988)],
            1.4: [(-4.9097915, -1.0695567, 0), (-4.889091, -1.1332654, -0.25), (-4.832537, -1.3073208, -0.43301272), (-4.755283, -1.545085, -0.5), (-4.6780286, -1.7828491, -0.4330127), (-4.6214747, -1.9569045, -0.25000003), (-4.6007743, -2.0206132, 4.371139e-8), (-4.6214747, -1.9569044, 0.2500001), (-4.6780286, -1.7828491, 0.43301272), (-4.755283, -1.545085, 0.5), (-4.832537, -1.3073208, 0.43301272), (-4.889091, -1.1332653, 0.24999988), (4.6007743, 2.0206132, 0), (4.6214747, 1.9569045, -0.25), (4.6780286, 1.7828491, -0.43301272), (4.755283, 1.545085, -0.5), (4.832537, 1.3073208, -0.4330127), (4.889091, 1.1332654, -0.25000003), (4.9097915, 1.0695567, 4.371139e-8), (4.889091, 1.1332655, 0.2500001), (4.832537, 1.3073208, 0.43301272), (4.755283, 1.545085, 0.5), (4.6780286, 1.7828491, 0.43301272), (4.6214747, 1.9569046, 0.24999988)],
            1.5: [(-5, 0.5, 0), (-5, 0.4330127, -0.25), (-5, 0.24999999, -0.43301272), (-5, -2.1855694e-8, -0.5), (-5, -0.25000003, -0.4330127), (-5, -0.4330127, -0.25000003), (-5, -0.5, 4.371139e-8), (-5, -0.43301263, 0.2500001), (-5, -0.24999996, 0.43301272), (-5, 5.9624403e-9, 0.5), (-5, 0.24999996, 0.43301272), (-5, 0.43301278, 0.24999988), (5, 0.5, 0), (5, 0.4330127, -0.25), (5, 0.24999999, -0.43301272), (5, -2.1855694e-8, -0.5), (5, -0.25000003, -0.4330127), (5, -0.4330127, -0.25000003), (5, -0.5, 4.371139e-8), (5, -0.43301263, 0.2500001), (5, -0.24999996, 0.43301272), (5, 5.9624403e-9, 0.5), (5, 0.24999996, 0.43301272), (5, 0.43301278, 0.24999988)],
            1.6: [(-4.6007743, 2.0206132, 0), (-4.6214747, 1.9569045, -0.25), (-4.6780286, 1.7828491, -0.43301272), (-4.755283, 1.545085, -0.5), (-4.832537, 1.3073208, -0.4330127), (-4.889091, 1.1332654, -0.25000003), (-4.9097915, 1.0695567, 4.371139e-8), (-4.889091, 1.1332655, 0.2500001), (-4.832537, 1.3073208, 0.43301272), (-4.755283, 1.545085, 0.5), (-4.6780286, 1.7828491, 0.43301272), (-4.6214747, 1.9569046, 0.24999988), (4.9097915, -1.0695567, 0), (4.889091, -1.1332654, -0.25), (4.832537, -1.3073208, -0.43301272), (4.755283, -1.545085, -0.5), (4.6780286, -1.7828491, -0.4330127), (4.6214747, -1.9569045, -0.25000003), (4.6007743, -2.0206132, 4.371139e-8), (4.6214747, -1.9569044, 0.2500001), (4.6780286, -1.7828491, 0.43301272), (4.755283, -1.545085, 0.5), (4.832537, -1.3073208, 0.43301272), (4.889091, -1.1332653, 0.24999988)],
            1.7: [(-3.7511923, 3.3434348, 0), (-3.7905664, 3.2892408, -0.25), (-3.8981388, 3.1411805, -0.43301272), (-4.045085, 2.9389262, -0.5), (-4.1920314, 2.736672, -0.4330127), (-4.2996035, 2.5886116, -0.25000003), (-4.338978, 2.5344176, 4.371139e-8), (-4.2996035, 2.5886116, 0.2500001), (-4.1920314, 2.736672, 0.43301272), (-4.045085, 2.9389262, 0.5), (-3.8981388, 3.1411805, 0.43301272), (-3.7905664, 3.2892408, 0.24999988), (4.338978, -2.5344176, 0), (4.2996035, -2.5886116, -0.25), (4.1920314, -2.736672, -0.43301272), (4.045085, -2.9389262, -0.5), (3.8981385, -3.1411805, -0.4330127), (3.7905664, -3.2892408, -0.25000003), (3.7511923, -3.3434348, 4.371139e-8), (3.7905664, -3.2892408, 0.2500001), (3.8981388, -3.1411805, 0.43301272), (4.045085, -2.9389262, 0.5), (4.1920314, -2.736672, 0.43301272), (4.2996035, -2.5886116, 0.24999988)],
            1.8: [(-2.5344176, 4.338978, 0), (-2.5886116, 4.2996035, -0.25), (-2.736672, 4.1920314, -0.43301272), (-2.9389262, 4.045085, -0.5), (-3.1411805, 3.8981385, -0.4330127), (-3.2892408, 3.7905664, -0.25000003), (-3.3434348, 3.7511923, 4.371139e-8), (-3.2892408, 3.7905664, 0.2500001), (-3.1411805, 3.8981388, 0.43301272), (-2.9389262, 4.045085, 0.5), (-2.736672, 4.1920314, 0.43301272), (-2.5886116, 4.2996035, 0.24999988), (3.3434348, -3.7511923, 0), (3.2892408, -3.7905664, -0.25), (3.1411805, -3.8981388, -0.43301272), (2.9389262, -4.045085, -0.5), (2.736672, -4.1920314, -0.4330127), (2.5886116, -4.2996035, -0.25000003), (2.5344176, -4.338978, 4.371139e-8), (2.5886116, -4.2996035, 0.2500001), (2.736672, -4.1920314, 0.43301272), (2.9389262, -4.045085, 0.5), (3.1411805, -3.8981388, 0.43301272), (3.2892408, -3.7905664, 0.24999988)],
            1.9: [(-1.0695567, 4.9097915, 0), (-1.1332654, 4.889091, -0.25), (-1.3073208, 4.832537, -0.43301272), (-1.545085, 4.755283, -0.5), (-1.7828491, 4.6780286, -0.4330127), (-1.9569045, 4.6214747, -0.25000003), (-2.0206132, 4.6007743, 4.371139e-8), (-1.9569044, 4.6214747, 0.2500001), (-1.7828491, 4.6780286, 0.43301272), (-1.545085, 4.755283, 0.5), (-1.3073208, 4.832537, 0.43301272), (-1.1332653, 4.889091, 0.24999988), (2.0206132, -4.6007743, 0), (1.9569045, -4.6214747, -0.25), (1.7828491, -4.6780286, -0.43301272), (1.545085, -4.755283, -0.5), (1.3073208, -4.832537, -0.4330127), (1.1332654, -4.889091, -0.25000003), (1.0695567, -4.9097915, 4.371139e-8), (1.1332655, -4.889091, 0.2500001), (1.3073208, -4.832537, 0.43301272), (1.545085, -4.755283, 0.5), (1.7828491, -4.6780286, 0.43301272), (1.9569046, -4.6214747, 0.24999988)],
            2: [(0.5, 5, 0), (0.4330127, 5, -0.25), (0.24999999, 5, -0.43301272), (-2.1855694e-8, 5, -0.5), (-0.25000003, 5, -0.4330127), (-0.4330127, 5, -0.25000003), (-0.5, 5, 4.371139e-8), (-0.43301263, 5, 0.2500001), (-0.24999996, 5, 0.43301272), (5.9624403e-9, 5, 0.5), (0.24999996, 5, 0.43301272), (0.43301278, 5, 0.24999988), (0.5, -5, 0), (0.4330127, -5, -0.25), (0.24999999, -5, -0.43301272), (-2.1855694e-8, -5, -0.5), (-0.25000003, -5, -0.4330127), (-0.4330127, -5, -0.25000003), (-0.5, -5, 4.371139e-8), (-0.43301263, -5, 0.2500001), (-0.24999996, -5, 0.43301272), (5.9624403e-9, -5, 0.5), (0.24999996, -5, 0.43301272), (0.43301278, -5, 0.24999988)],
        }
        uniform token subdivisionScheme = "none"
    }
}

def Scope "materials"
{
    def Material "arnold_materialbuilder1"
    {
        token outputs:arnold:surface.connect = </materials/arnold_materialbuilder1/standard_surface1.outputs:shader>

        def Shader "standard_surface1"
        {
            uniform token info:id = "arnold:standard_surface"
            string inputs:aov_id1 = ""
            string inputs:aov_id2 = ""
            string inputs:aov_id3 = ""
            string inputs:aov_id4 = ""
            string inputs:aov_id5 = ""
            string inputs:aov_id6 = ""
            string inputs:aov_id7 = ""
            string inputs:aov_id8 = ""
            float inputs:base = 0
            color3f inputs:base_color = (0.8, 0.8, 0.8)
            bool inputs:caustics = 0
            float inputs:coat = 0
            float inputs:coat_affect_color = 0
            float inputs:coat_affect_roughness = 0
            float inputs:coat_anisotropy = 0
            color3f inputs:coat_color = (1, 1, 1)
            float inputs:coat_IOR = 1.5
            vector3f inputs:coat_normal = (0, 0, 0)
            float inputs:coat_rotation = 0
            float inputs:coat_roughness = 0.1
            int inputs:dielectric_priority = 0
            float inputs:diffuse_roughness = 0
            float inputs:emission = 1
            color3f inputs:emission_color = (1, 1, 1)
            bool inputs:exit_to_background = 0
            color3f inputs:id1 = (0, 0, 0)
            color3f inputs:id2 = (0, 0, 0)
            color3f inputs:id3 = (0, 0, 0)
            color3f inputs:id4 = (0, 0, 0)
            color3f inputs:id5 = (0, 0, 0)
            color3f inputs:id6 = (0, 0, 0)
            color3f inputs:id7 = (0, 0, 0)
            color3f inputs:id8 = (0, 0, 0)
            float inputs:indirect_diffuse = 1
            float inputs:indirect_specular = 1
            bool inputs:internal_reflections = 1
            float inputs:metalness = 0
            vector3f inputs:normal = (0, 0, 0)
            color3f inputs:opacity = (1, 1, 1)
            float inputs:sheen = 0
            color3f inputs:sheen_color = (1, 1, 1)
            float inputs:sheen_roughness = 0.3
            float inputs:specular = 0
            float inputs:specular_anisotropy = 0
            color3f inputs:specular_color = (1, 1, 1)
            float inputs:specular_IOR = 1.5
            float inputs:specular_rotation = 0
            float inputs:specular_roughness = 0.2
            float inputs:subsurface = 0
            float inputs:subsurface_anisotropy = 0
            color3f inputs:subsurface_color = (1, 1, 1)
            color3f inputs:subsurface_radius = (1, 1, 1)
            float inputs:subsurface_scale = 1
            token inputs:subsurface_type = "randomwalk"
            vector3f inputs:tangent = (0, 0, 0)
            float inputs:thin_film_IOR = 1.5
            float inputs:thin_film_thickness = 0
            bool inputs:thin_walled = 0
            float inputs:transmission = 0
            color3f inputs:transmission_color = (1, 1, 1)
            float inputs:transmission_depth = 0
            float inputs:transmission_dispersion = 0
            float inputs:transmission_extra_roughness = 0
            color3f inputs:transmission_scatter = (0, 0, 0)
            float inputs:transmission_scatter_anisotropy = 0
            bool inputs:transmit_aovs = 0
            token outputs:shader
        }
    }
}

def Xform "cameras"
{
    def Camera "camera1" (
        prepend apiSchemas = ["HoudiniCameraPlateAPI", "HoudiniViewportGuideAPI"]
    )
    {
        float2 clippingRange = (1, 1000000)
        float exposure = 0
        float focalLength.timeSamples = {
            1: 0.5,
        }
        float focusDistance = 5
        float fStop = 0
        float horizontalAperture.timeSamples = {
            1: 0.20955,
        }
        float horizontalApertureOffset.timeSamples = {
            1: 0,
        }
        asset houdini:backgroundimage = @@
        asset houdini:foregroundimage = @@
        float houdini:guidescale.timeSamples = {
            1: 1,
        }
        bool houdini:inviewermenu = 1
        token projection = "perspective"
        double shutter:close = 0.20000000298023224
        double shutter:open = -0.20000000298023224
        float verticalAperture.timeSamples = {
            1: 0.11787187,
        }
        float verticalApertureOffset.timeSamples = {
            1: 0,
        }
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 47.59947455711554, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

def Scope "Render"
{
    def RenderSettings "rendersettings1"
    {
        custom int arnold:global:AA_samples = 6
        custom int arnold:global:AA_seed
        int arnold:global:AA_seed.timeSamples = {
            1: 1,
        }
        token aspectRatioConformPolicy = "expandAperture"
        rel camera = </cameras/camera1>
        float4 dataWindowNDC = (0, 0, 1, 1)
        token[] includedPurposes = ["default"]
        bool instantaneousShutter = 0
        token[] materialBindingPurposes = ["full", "allPurpose"]
        float pixelAspectRatio = 1
        rel products = None
        int2 resolution = (2048, 1080)
    }
}

