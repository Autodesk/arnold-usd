#usda 1.0

def "World"
{
    def Cylinder "cylinder"
    {
        token axis = "Y"
        double height = 3
        rel material:binding = </World/material>
        double radius = 1.1
        token visibility = "invisible"
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cone "cone"
    {
        token axis = "Y"
        double height = 3
        rel material:binding = </World/material2>
        double radius = 1.1
        float3 xformOp:translate = (5, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Cube "cube"
    {
        rel material:binding = </World/material3>
        custom bool primvars:arnold:smoothing = 0
        token visibility = "inherited"
        float3 xformOp:translate = (-5, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
    }

    def Xform "xform"
    {
        token visibility = "invisible"
        float3 xformOp:translate = (0, 5, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]

        def Cylinder "cylinder"
        {
            token axis = "Y"
            double height = 3
            rel material:binding = </World/material>
            double radius = 1.1
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }

        def Cone "cone"
        {
            token axis = "Y"
            double height = 3
            rel material:binding = </World/material2>
            double radius = 1.1
            float3 xformOp:translate = (5, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }

        def Cube "cube"
        {
            rel material:binding = </World/material3>
            custom bool primvars:arnold:smoothing = 0
            float3 xformOp:translate = (-5, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate"]
        }
    }

    def DistantLight "red_light"
    {
        color3f inputs:color = (1, 0, 0)
        float inputs:intensity = 1
    }

    def DistantLight "green_light"
    {
        color3f inputs:color = (0, 1, 0)
        float inputs:intensity = 1
        token visibility = "inherited"
    }

    def DistantLight "hidden_blue_light"
    {
        color3f inputs:color = (0, 0, 1)
        float inputs:intensity = 1
        token visibility = "invisible"
    }
}

