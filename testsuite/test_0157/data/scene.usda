#usda 1.0
(
    defaultPrim = "sopcreate1"
    endTimeCode = 8
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 4
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "sopcreate1" (
    kind = "component"
)
{
    matrix4d xformOp:transform:xform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Mesh "mesh_0"
    {
        float3[] extent.timeSamples = {
            3: [(-0.50000006, -0.86602545, -0.5), (1, 0.8660254, 0.5)],
            4: [(-1, -1, -0.5), (1, 1, 0.5)],
            5: [(-0.80901706, -0.9510565, -0.5), (1, 0.95105654, 0.5)],
            6: [(-1, -0.86602545, -0.5), (1, 0.86602545, 0.5)],
            7: [(-0.9009689, -0.9749279, -0.5), (1, 0.9749279, 0.5)],
            8: [(-1, -1, -0.5), (1, 1, 0.5)],
        }
        int[] faceVertexCounts.timeSamples = {
            3: [3, 3, 4, 4, 4],
            4: [4, 4, 4, 4, 4, 4],
            5: [5, 5, 4, 4, 4, 4, 4],
            6: [6, 6, 4, 4, 4, 4, 4, 4],
            7: [7, 7, 4, 4, 4, 4, 4, 4, 4],
            8: [8, 8, 4, 4, 4, 4, 4, 4, 4, 4],
        }
        int[] faceVertexIndices.timeSamples = {
            3: [2, 1, 0, 3, 4, 5, 0, 1, 4, 3, 1, 2, 5, 4, 2, 0, 3, 5],
            4: [3, 2, 1, 0, 4, 5, 6, 7, 0, 1, 5, 4, 1, 2, 6, 5, 2, 3, 7, 6, 3, 0, 4, 7],
            5: [4, 3, 2, 1, 0, 5, 6, 7, 8, 9, 0, 1, 6, 5, 1, 2, 7, 6, 2, 3, 8, 7, 3, 4, 9, 8, 4, 0, 5, 9],
            6: [5, 4, 3, 2, 1, 0, 6, 7, 8, 9, 10, 11, 0, 1, 7, 6, 1, 2, 8, 7, 2, 3, 9, 8, 3, 4, 10, 9, 4, 5, 11, 10, 5, 0, 6, 11],
            7: [6, 5, 4, 3, 2, 1, 0, 7, 8, 9, 10, 11, 12, 13, 0, 1, 8, 7, 1, 2, 9, 8, 2, 3, 10, 9, 3, 4, 11, 10, 4, 5, 12, 11, 5, 6, 13, 12, 6, 0, 7, 13],
            8: [7, 6, 5, 4, 3, 2, 1, 0, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 9, 8, 1, 2, 10, 9, 2, 3, 11, 10, 3, 4, 12, 11, 4, 5, 13, 12, 5, 6, 14, 13, 6, 7, 15, 14, 7, 0, 8, 15],
        }
        uniform token orientation = "leftHanded"
        point3f[] points (
            interpolation = "vertex"
        )
        point3f[] points.timeSamples = {
            3: [(1, 0, 0.5), (-0.50000006, 0.8660254, 0.5), (-0.4999999, -0.86602545, 0.5), (1, 0, -0.5), (-0.50000006, 0.8660254, -0.5), (-0.4999999, -0.86602545, -0.5)],
            4: [(1, 0, 0.5), (-4.371139e-8, 1, 0.5), (-1, -8.742278e-8, 0.5), (1.1924881e-8, -1, 0.5), (1, 0, -0.5), (-4.371139e-8, 1, -0.5), (-1, -8.742278e-8, -0.5), (1.1924881e-8, -1, -0.5)],
            5: [(1, 0, 0.5), (0.30901697, 0.95105654, 0.5), (-0.80901706, 0.5877852, 0.5), (-0.80901694, -0.58778536, 0.5), (0.30901712, -0.9510565, 0.5), (1, 0, -0.5), (0.30901697, 0.95105654, -0.5), (-0.80901706, 0.5877852, -0.5), (-0.80901694, -0.58778536, -0.5), (0.30901712, -0.9510565, -0.5)],
            6: [(1, 0, 0.5), (0.49999997, 0.86602545, 0.5), (-0.50000006, 0.8660254, 0.5), (-1, -8.742278e-8, 0.5), (-0.4999999, -0.86602545, 0.5), (0.4999999, -0.86602545, 0.5), (1, 0, -0.5), (0.49999997, 0.86602545, -0.5), (-0.50000006, 0.8660254, -0.5), (-1, -8.742278e-8, -0.5), (-0.4999999, -0.86602545, -0.5), (0.4999999, -0.86602545, -0.5)],
            7: [(1, 0, 0.5), (0.6234898, 0.7818315, 0.5), (-0.22252095, 0.9749279, 0.5), (-0.9009689, 0.4338836, 0.5), (-0.90096885, -0.43388376, 0.5), (-0.222521, -0.9749279, 0.5), (0.62349004, -0.7818313, 0.5), (1, 0, -0.5), (0.6234898, 0.7818315, -0.5), (-0.22252095, 0.9749279, -0.5), (-0.9009689, 0.4338836, -0.5), (-0.90096885, -0.43388376, -0.5), (-0.222521, -0.9749279, -0.5), (0.62349004, -0.7818313, -0.5)],
            8: [(1, 0, 0.5), (0.70710677, 0.70710677, 0.5), (-4.371139e-8, 1, 0.5), (-0.70710677, 0.70710677, 0.5), (-1, -8.742278e-8, 0.5), (-0.70710665, -0.7071069, 0.5), (1.1924881e-8, -1, 0.5), (0.707107, -0.70710653, 0.5), (1, 0, -0.5), (0.70710677, 0.70710677, -0.5), (-4.371139e-8, 1, -0.5), (-0.70710677, 0.70710677, -0.5), (-1, -8.742278e-8, -0.5), (-0.70710665, -0.7071069, -0.5), (1.1924881e-8, -1, -0.5), (0.707107, -0.70710653, -0.5)],
        }
        uniform token subdivisionScheme = "none"
        vector3f[] velocities (
            interpolation = "vertex"
        )
        vector3f[] velocities.timeSamples = {
            3: [(0, -50, 25), (43.30127, 25.000004, 25), (-43.301273, 24.999996, 25), (0, -50, -25), (43.30127, 25.000004, -25), (-43.301273, 24.999996, -25)],
            4: [(0, -50, 25), (50, 0.0000021855694, 25), (-0.000004371139, 50, 25), (-50, -5.9624404e-7, 25), (0, -50, -25), (50, 0.0000021855694, -25), (-0.000004371139, 50, -25), (-50, -5.9624404e-7, -25)],
            5: [(0, -50, 25), (47.552826, -15.450849, 25), (29.38926, 40.45085, 25), (-29.389269, 40.450848, 25), (-47.552826, -15.450856, 25), (0, -50, -25), (47.552826, -15.450849, -25), (29.38926, 40.45085, -25), (-29.389269, 40.450848, -25), (-47.552826, -15.450856, -25)],
            6: [(0, -50, 25), (43.301273, -24.999998, 25), (43.30127, 25.000004, 25), (-0.000004371139, 50, 25), (-43.301273, 24.999996, 25), (-43.301273, -24.999996, 25), (0, -50, -25), (43.301273, -24.999998, -25), (43.30127, 25.000004, -25), (-0.000004371139, 50, -25), (-43.301273, 24.999996, -25), (-43.301273, -24.999996, -25)],
            7: [(0, -50, 25), (39.091576, -31.17449, 25), (48.746395, 11.126047, 25), (21.69418, 45.048447, 25), (-21.694187, 45.048443, 25), (-48.746395, 11.12605, 25), (-39.091568, -31.174501, 25), (0, -50, -25), (39.091576, -31.17449, -25), (48.746395, 11.126047, -25), (21.69418, 45.048447, -25), (-21.694187, 45.048443, -25), (-48.746395, 11.12605, -25), (-39.091568, -31.174501, -25)],
            8: [(0, -50, 25), (35.35534, -35.35534, 25), (50, 0.0000021855694, 25), (35.35534, 35.35534, 25), (-0.000004371139, 50, 25), (-35.355343, 35.35533, 25), (-50, -5.9624404e-7, 25), (-35.355328, -35.35535, 25), (0, -50, -25), (35.35534, -35.35534, -25), (50, 0.0000021855694, -25), (35.35534, 35.35534, -25), (-0.000004371139, 50, -25), (-35.355343, 35.35533, -25), (-50, -5.9624404e-7, -25), (-35.355328, -35.35535, -25)],
        }
    }
}

