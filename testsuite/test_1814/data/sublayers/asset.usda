#usda 1.0
(
    defaultPrim = "world"
    endTimeCode = 1100
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 1001
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def SkelRoot "world" (
    kind = "component"
)
{
    float primvars:pscale = 1
    int[] primvars:pscale:indices = None
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Xform "geo"
    {
        def Mesh "cubeB_geo" (
            apiSchemas = ["SkelBindingAPI"]
        )
        {
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 2, 3, 1, 2, 4, 5, 3, 4, 6, 7, 5, 6, 0, 1, 7, 1, 3, 5, 7, 6, 4, 2, 0]
            uniform token orientation = "leftHanded"
            point3f[] points = [(-2.3707063, 6.710939, 2.3707063), (2.3707063, 6.710939, 2.3707063), (-2.3707063, 11.452352, 2.3707063), (2.3707063, 11.452352, 2.3707063), (-2.3707063, 11.452352, -2.3707063), (2.3707063, 11.452352, -2.3707063), (-2.3707063, 6.710939, -2.3707063), (2.3707063, 6.710939, -2.3707063)] (
                interpolation = "vertex"
            )
            matrix4d primvars:skel:geomBindTransform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            int[] primvars:skel:jointIndices = [0, 0, 0, 0, 0, 0, 0, 0] (
                elementSize = 1
                interpolation = "vertex"
            )
            float[] primvars:skel:jointWeights = [1, 1, 1, 1, 1, 1, 1, 1] (
                elementSize = 1
                interpolation = "vertex"
            )
            uniform token[] skel:joints = ["global_skl/move_skl/root_skl/squash_skl/c_chain1_00_skl/c_chain2_00_skl"]
            rel skel:skeleton = </world/skeleton>
            uniform token subdivisionScheme = "catmullClark"
        }

        def Mesh "cubeA_geo" (
            apiSchemas = ["SkelBindingAPI"]
        )
        {
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 2, 3, 1, 2, 4, 5, 3, 4, 6, 7, 5, 6, 0, 1, 7, 1, 3, 5, 7, 6, 4, 2, 0]
            uniform token orientation = "leftHanded"
            point3f[] points = [(-2.3707063, 0.72607136, 2.3707063), (2.3707063, 0.72607136, 2.3707063), (-2.3707063, 5.467484, 2.3707063), (2.3707063, 5.467484, 2.3707063), (-2.3707063, 5.467484, -2.3707063), (2.3707063, 5.467484, -2.3707063), (-2.3707063, 0.72607136, -2.3707063), (2.3707063, 0.72607136, -2.3707063)] (
                interpolation = "vertex"
            )
            matrix4d primvars:skel:geomBindTransform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
            int[] primvars:skel:jointIndices = [0, 0, 0, 0, 0, 0, 0, 0] (
                elementSize = 1
                interpolation = "vertex"
            )
            float[] primvars:skel:jointWeights = [1, 1, 1, 1, 1, 1, 1, 1] (
                elementSize = 1
                interpolation = "vertex"
            )
            uniform token[] skel:joints = ["global_skl/move_skl/root_skl/squash_skl/c_chain1_00_skl"]
            rel skel:skeleton = </world/skeleton>
            uniform token subdivisionScheme = "catmullClark"
        }

        def BasisCurves "curves_fur" (
            prepend apiSchemas = ["SkelBindingAPI"]
        )
        {
            uniform token basis = ""
            int[] curveVertexCounts = [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
            float3[] extent = [(-3.5254068, 5.556238, -3.525407), (3.5254068, 12.607053, 3.5254068)]
            point3f[] points = [(1.3655639, 7.6852, 2.3707063), (1.4487046, 7.600179, 2.515044), (1.5318452, 7.5151587, 2.6593814), (1.614986, 7.4301376, 2.803719), (1.6981266, 7.345117, 2.9480567), (1.7812673, 7.260096, 3.092394), (1.864408, 7.1750755, 3.2367318), (1.9475486, 7.0900545, 3.3810692), (2.0306892, 7.0050335, 3.5254068), (-2.3064907, 7.9024634, 2.3707063), (-2.4469185, 7.8306704, 2.515044), (-2.5873463, 7.7588773, 2.6593814), (-2.7277741, 7.687084, 2.803719), (-2.8682022, 7.615291, 2.9480567), (-3.00863, 7.543498, 3.0923944), (-3.1490579, 7.471705, 3.2367318), (-3.2894857, 7.399912, 3.3810694), (-3.4299135, 7.3281193, 3.5254068), (-0.23102918, 9.545805, 2.3707063), (-0.2450951, 9.574065, 2.515044), (-0.25916103, 9.6023245, 2.6593814), (-0.27322695, 9.630585, 2.803719), (-0.28729287, 9.658844, 2.9480567), (-0.3013588, 9.687104, 3.092394), (-0.31542474, 9.7153635, 3.2367318), (-0.32949066, 9.743624, 3.3810692), (-0.34355658, 9.771883, 3.5254068), (1.9700272, 9.007822, 2.3707063), (2.0899699, 9.003327, 2.515044), (2.2099125, 8.998833, 2.6593814), (2.3298554, 8.994338, 2.803719), (2.449798, 8.989843, 2.9480567), (2.5697408, 8.985349, 3.092394), (2.6896834, 8.980854, 3.2367318), (2.809626, 8.976359, 3.3810692), (2.9295688, 8.971865, 3.5254068), (-0.612735, 7.5964155, 2.3707063), (-0.65004057, 7.505989, 2.515044), (-0.6873462, 7.4155626, 2.6593814), (-0.7246518, 7.325136, 2.803719), (-0.76195747, 7.2347097, 2.9480567), (-0.79926306, 7.1442833, 3.092394), (-0.8365687, 7.053857, 3.2367318), (-0.8738743, 6.963431, 3.3810692), (-0.9111799, 6.8730044, 3.5254068), (2.3707063, 11.278001, -1.4223624), (2.515044, 11.411723, -1.5089612), (2.6593814, 11.545445, -1.5955601), (2.803719, 11.679168, -1.6821588), (2.9480567, 11.81289, -1.7687577), (3.092394, 11.946613, -1.8553565), (3.2367318, 12.080336, -1.9419553), (3.3810692, 12.214058, -2.028554), (3.5254068, 12.34778, -2.1151528), (-0.6727068, 11.452352, -0.5509616), (-0.7136637, 11.596689, -0.5845063), (-0.7546207, 11.741027, -0.6180509), (-0.7955776, 11.885365, -0.6515955), (-0.8365345, 12.029702, -0.68514013), (-0.8774914, 12.17404, -0.7186848), (-0.9184483, 12.318377, -0.7522294), (-0.9594053, 12.462714, -0.785774), (-1.0003622, 12.607052, -0.81931865), (0.18705243, 11.452352, 1.7459959), (0.19844088, 11.596689, 1.8522987), (0.20982935, 11.741027, 1.9586016), (0.22121781, 11.885365, 2.0649045), (0.23260626, 12.029702, 2.1712072), (0.24399471, 12.17404, 2.2775102), (0.2553832, 12.318377, 2.383813), (0.26677164, 12.462714, 2.4901156), (0.2781601, 12.607052, 2.5964186), (1.1482466, 11.452351, 0.98146164), (1.2181562, 11.596688, 1.0412167), (1.2880658, 11.741026, 1.1009718), (1.3579755, 11.885364, 1.1607269), (1.427885, 12.029701, 1.220482), (1.4977946, 12.174038, 1.2802372), (1.5677042, 12.318376, 1.3399923), (1.6376138, 12.462713, 1.3997474), (1.7075233, 12.607051, 1.4595025), (1.72921, 11.452352, 0.23361427), (1.8344909, 11.596689, 0.24783759), (1.9397717, 11.741027, 0.2620609), (2.0450525, 11.885365, 0.27628422), (2.1503334, 12.029702, 0.29050756), (2.2556143, 12.17404, 0.3047309), (2.3608952, 12.318377, 0.3189542), (2.466176, 12.462714, 0.3331775), (2.571457, 12.607052, 0.34740084), (0.6146348, 11.08093, -2.3707063), (0.6520561, 11.202654, -2.515044), (0.6894774, 11.324378, -2.6593814), (0.72689867, 11.446102, -2.803719), (0.76432, 11.567826, -2.9480567), (0.80174124, 11.68955, -3.092394), (0.8391626, 11.811274, -3.2367318), (0.8765839, 11.932998, -3.3810692), (0.91400516, 12.054722, -3.5254068), (2.1912987, 11.452352, 1.8051858), (2.3247132, 11.596689, 1.9150923), (2.4581277, 11.741027, 2.024999), (2.5915422, 11.885365, 2.1349053), (2.724957, 12.029702, 2.244812), (2.8583715, 12.17404, 2.3547184), (2.991786, 12.318377, 2.464625), (3.1252005, 12.462714, 2.5745316), (3.258615, 12.607052, 2.6844382), (0.90950084, 11.452353, -0.9484323), (0.9648747, 11.59669, -1.0061765), (1.0202485, 11.741028, -1.0639206), (1.0756223, 11.8853655, -1.1216648), (1.1309962, 12.029703, -1.1794089), (1.18637, 12.17404, -1.237153), (1.2417438, 12.3183775, -1.2948972), (1.2971177, 12.462715, -1.3526413), (1.3524916, 12.607053, -1.4103855), (1.3676814, 8.610067, -2.3707063), (1.450951, 8.581356, -2.515044), (1.5342206, 8.552645, -2.6593814), (1.6174902, 8.523933, -2.803719), (1.7007599, 8.495222, -2.9480567), (1.7840295, 8.46651, -3.092394), (1.8672991, 8.4377985, -3.2367318), (1.9505687, 8.409087, -3.3810692), (2.0338383, 8.380376, -3.5254068), (-0.5202396, 9.382182, -2.3707063), (-0.55191374, 9.40048, -2.515044), (-0.5835879, 9.418777, -2.6593814), (-0.61526203, 9.437076, -2.803719), (-0.6469362, 9.455374, -2.9480567), (-0.6786103, 9.473671, -3.092394), (-0.7102845, 9.491969, -3.2367318), (-0.7419586, 9.510267, -3.3810692), (-0.77363276, 9.528564, -3.5254068), (-0.71276444, 6.7109394, -0.63477814), (-0.75616026, 6.5666018, -0.67342585), (-0.799556, 6.422264, -0.71207356), (-0.84295183, 6.277927, -0.7507212), (-0.8863476, 6.1335893, -0.7893689), (-0.9297434, 5.9892516, -0.82801664), (-0.97313917, 5.844914, -0.8666643), (-1.016535, 5.7005763, -0.905312), (-1.0599308, 5.556239, -0.9439597), (-1.6012691, 6.8896675, -2.3707066), (-1.6987604, 6.7562118, -2.5150442), (-1.7962518, 6.6227555, -2.6593816), (-1.893743, 6.4893, -2.8037193), (-1.9912344, 6.355844, -2.9480567), (-2.0887258, 6.222388, -3.0923944), (-2.186217, 6.088932, -3.236732), (-2.2837083, 5.9554763, -3.3810697), (-2.3811996, 5.82202, -3.525407), (1.392511, 6.710939, -1.8693871), (1.4772923, 6.5666013, -1.9832025), (1.5620737, 6.4222636, -2.0970178), (1.646855, 6.2779264, -2.210833), (1.7316363, 6.133589, -2.3246486), (1.8164177, 5.989251, -2.438464), (1.901199, 5.8449135, -2.5522792), (1.9859803, 5.700576, -2.6660945), (2.0707617, 5.556238, -2.77991), (-2.0016336, 6.710939, 1.1731142), (-2.1235006, 6.5666013, 1.2445378), (-2.2453678, 6.4222636, 1.3159614), (-2.3672347, 6.2779264, 1.387385), (-2.4891016, 6.133589, 1.4588087), (-2.6109686, 5.989251, 1.5302323), (-2.7328358, 5.8449135, 1.601656), (-2.8547027, 5.700576, 1.6730795), (-2.9765697, 5.556238, 1.7445031), (-0.54930526, 6.710939, 1.233202), (-0.582749, 6.5666013, 1.3082839), (-0.6161928, 6.4222636, 1.383366), (-0.6496366, 6.2779264, 1.4584479), (-0.6830804, 6.133589, 1.53353), (-0.7165241, 5.989251, 1.608612), (-0.74996793, 5.8449135, 1.6836939), (-0.78341174, 5.700576, 1.758776), (-0.8168555, 5.556238, 1.833858), (0.838933, 6.7109385, 0.8074423), (0.8900104, 6.566601, 0.85660243), (0.94108784, 6.422263, 0.9057626), (0.9921652, 6.277926, 0.95492274), (1.0432427, 6.1335883, 1.0040829), (1.09432, 5.9892507, 1.053243), (1.1453974, 5.844913, 1.1024032), (1.1964749, 5.7005754, 1.1515633), (1.2475523, 5.556238, 1.2007234), (2.3707063, 10.289947, 2.0646908), (2.515044, 10.363513, 2.190397), (2.6593814, 10.437078, 2.3161032), (2.803719, 10.510645, 2.4418094), (2.9480567, 10.58421, 2.5675154), (3.092394, 10.657777, 2.6932216), (3.2367318, 10.731342, 2.8189278), (3.3810692, 10.804909, 2.944634), (3.5254068, 10.878474, 3.0703402), (2.3707063, 6.8797865, 0.70593613), (2.515044, 6.745729, 0.7489162), (2.6593814, 6.6116714, 0.7918962), (2.803719, 6.477614, 0.8348763), (2.9480567, 6.3435564, 0.8778564), (3.092394, 6.209499, 0.92083645), (3.2367318, 6.0754414, 0.9638165), (3.3810692, 5.9413843, 1.0067966), (3.5254068, 5.8073263, 1.0497766), (2.3707063, 10.073628, -0.40372643), (2.515044, 10.134024, -0.42830682), (2.6593814, 10.19442, -0.4528872), (2.803719, 10.254815, -0.4774676), (2.9480567, 10.315211, -0.502048), (3.092394, 10.375607, -0.5266284), (3.2367318, 10.436003, -0.5512088), (3.3810692, 10.496398, -0.5757892), (3.5254068, 10.556793, -0.6003696), (2.3707063, 8.604462, 0.1209895), (2.515044, 8.575409, 0.1283558), (2.6593814, 8.546356, 0.1357221), (2.803719, 8.517303, 0.1430884), (2.9480567, 8.488251, 0.1504547), (3.092394, 8.459198, 0.157821), (3.2367318, 8.430145, 0.1651873), (3.3810692, 8.401093, 0.1725536), (3.5254068, 8.37204, 0.1799199), (-1.9260519, 11.452353, 1.5106734), (-2.043317, 11.59669, 1.602649), (-2.1605825, 11.741028, 1.6946244), (-2.2778478, 11.8853655, 1.7866), (-2.395113, 12.029703, 1.8785754), (-2.5123785, 12.17404, 1.970551), (-2.6296437, 12.3183775, 2.0625265), (-2.7469091, 12.462715, 2.154502), (-2.8641744, 12.607053, 2.2464776), (-2.3707063, 9.3498745, -0.8258259), (-2.515044, 9.366205, -0.8761053), (-2.6593814, 9.382536, -0.92638475), (-2.803719, 9.398867, -0.9766642), (-2.9480567, 9.415197, -1.0269436), (-3.092394, 9.431528, -1.077223), (-3.2367318, 9.44786, -1.1275024), (-3.3810692, 9.4641905, -1.1777818), (-3.5254068, 9.480521, -1.2280612), (-2.3707063, 11.091665, -1.0828558), (-2.515044, 11.214043, -1.1487842), (-2.6593814, 11.33642, -1.2147125), (-2.803719, 11.458798, -1.2806408), (-2.9480567, 11.581176, -1.3465693), (-3.092394, 11.703553, -1.4124976), (-3.2367318, 11.825931, -1.478426), (-3.3810692, 11.948309, -1.5443543), (-3.5254068, 12.070686, -1.6102827), (-2.370706, 9.7211075, 1.5526454), (-2.5150437, 9.76004, 1.6471764), (-2.6593812, 9.798973, 1.7417073), (-2.8037188, 9.837906, 1.8362383), (-2.9480562, 9.876839, 1.9307692), (-3.0923939, 9.9157715, 2.0253), (-3.2367315, 9.954704, 2.119831), (-3.3810692, 9.993638, 2.214362), (-3.5254066, 10.032571, 2.308893), (-2.3707063, 8.119776, 0.16622376), (-2.515044, 8.0612135, 0.1763441), (-2.6593814, 8.002651, 0.18646443), (-2.803719, 7.944089, 0.19658476), (-2.9480567, 7.8855267, 0.2067051), (-3.092394, 7.8269644, 0.21682543), (-3.2367318, 7.768402, 0.22694576), (-3.3810692, 7.70984, 0.23706609), (-3.5254068, 7.6512775, 0.24718642)] (
                interpolation = "vertex"
            )
            int[] primvars:id = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] (
                interpolation = "uniform"
            )
            int[] primvars:id:indices = None
            int[] primvars:skinprim = [0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 2, 1, 1, 2, 2, 3, 2, 3, 3, 3, 3, 4, 4, 4, 4, 1, 5, 5, 5, 5] (
                interpolation = "uniform"
            )
            int[] primvars:skinprim:indices = None
            float3[] primvars:skinprimuv = [(0.7880078, 0.20547922, 0), (0.013543521, 0.2513016, 0), (0.45127422, 0.5978948, 0), (0.9154937, 0.48443013, 0), (0.37076956, 0.18675375, 0), (0.7999871, 0.96322805, 0), (0.35812104, 0.616202, 0), (0.53945076, 0.13175619, 0), (0.74217397, 0.29300225, 0), (0.86470354, 0.45072898, 0), (0.62963116, 0.07833549, 0), (0.96216154, 0.119272605, 0), (0.6918206, 0.7000316, 0), (0.7884544, 0.59945935, 0), (0.3902775, 0.43661445, 0), (0.34967256, 0.36612046, 0), (0.16228017, 0.9623049, 0), (0.79369116, 0.105732046, 0), (0.07784028, 0.7474187, 0), (0.38414735, 0.76009166, 0), (0.67693734, 0.6702957, 0), (0.06454105, 0.75483996, 0), (0.35111272, 0.035611235, 0), (0.585149, 0.70921665, 0), (0.47448242, 0.39935836, 0), (0.093781054, 0.18138747, 0), (0.325827, 0.5565716, 0), (0.27161744, 0.9239285, 0), (0.82746476, 0.6348674, 0), (0.53505784, 0.2971344, 0)] (
                interpolation = "uniform"
            )
            int[] primvars:skinprimuv:indices = None
            uniform token purpose = "default"
            uniform token type = "linear"
            float[] widths = [0.2] (
                interpolation = "constant"
            )
            uniform token wrap = "nonperiodic"
            uniform int[] primvars:skel:jointIndices = [6] (
                elementSize = 1
                interpolation = "constant"
            )
            uniform float[] primvars:skel:jointWeights = [1] (
                elementSize = 1
                interpolation = "constant"
            )
            append rel skel:skeleton = </world/skeleton>
        }
    }

    def Skeleton "skeleton" (
        apiSchemas = ["SkelBindingAPI"]
    )
    {
        token visibility = "invisible"
        uniform matrix4d[] bindTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (4.480791091918945, 0, -0, 0), (-0, 4.480791091918945, -0, 0), (0, -0, 4.480791091918945, 0), (-0, 3.0195415019989014, -0, 1) ), ( (4.593305587768555, -0, 0, 0), (0, 4.593305587768555, -0, 0), (-0, -0, 4.593305587768555, 0), (0, 9.012535095214844, -0, 1) )]
        uniform token[] jointNames = ["global_skl", "__locomotion__", "move_skl", "root_skl", "squash_skl", "c_chain1_00_skl", "c_chain2_00_skl"]
        uniform token[] joints = ["global_skl", "__locomotion__", "global_skl/move_skl", "global_skl/move_skl/root_skl", "global_skl/move_skl/root_skl/squash_skl", "global_skl/move_skl/root_skl/squash_skl/c_chain1_00_skl", "global_skl/move_skl/root_skl/squash_skl/c_chain1_00_skl/c_chain2_00_skl"]
        uniform token purpose = "guide"
        uniform matrix4d[] restTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (4.480791091918945, 0, 0, 0), (0, 4.480791091918945, 0, 0), (0, 0, 4.480791091918945, 0), (0, 3.0195415019989014, 0, 1) ), ( (1.0251104087518224, 0, 0, 0), (0, 1.0251104087518224, 0, 0), (0, 0, 1.0251104087518224, 0), (0, 1.337485606955485, 0, 1) )]
    }
}

