#usda 1.0
(
    defaultPrim = "grid"
    endTimeCode = 1
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "tree" 
{
    matrix4d xformOp:transform:xform = ( (2, 0, 0, 0), (0, 2, 0, 0), (0, 0, 2, 0), (0, 2.4220757484436035, 6, 2) )
    uniform token[] xformOpOrder = ["xformOp:transform:xform"]

    def Mesh "mesh_0"
    {
        float3[] extent = [(-2.5796466, -2.7124014, -2.1943774), (2.5796466, 2.7124012, 2.1943774)]
        int[] faceVertexCounts = [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
        int[] faceVertexIndices = [0, 4, 3, 2, 1, 0, 9, 10, 5, 4, 0, 1, 8, 14, 9, 1, 2, 7, 13, 8, 2, 3, 6, 12, 7, 3, 4, 5, 11, 6, 5, 10, 15, 19, 11, 6, 11, 19, 18, 12, 7, 12, 18, 17, 13, 8, 13, 17, 16, 14, 9, 14, 16, 15, 10, 15, 16, 17, 18, 19]
        uniform token orientation = "leftHanded"
        point3f[] points = [(0.98533726, 1.356201, -2.1943772), (1.5943093, -0.51802206, -2.1943774), (0, -1.6763562, -2.1943774), (-1.5943093, -0.51802206, -2.1943774), (-0.98533726, 1.356201, -2.1943772), (-1.5943093, 2.194379, -0.5180218), (-2.5796466, -0.8381781, -0.51802206), (0, -2.7124014, -0.5180221), (2.5796466, -0.8381781, -0.51802206), (1.5943093, 2.194379, -0.5180218), (0, 2.7124012, 0.5180221), (-2.5796466, 0.8381781, 0.51802206), (-1.5943093, -2.194379, 0.5180218), (1.5943093, -2.194379, 0.5180218), (2.5796466, 0.8381781, 0.51802206), (0, 1.6763562, 2.1943774), (1.5943093, 0.51802206, 2.1943774), (0.98533726, -1.356201, 2.1943772), (-0.98533726, -1.356201, 2.1943772), (-1.5943093, 0.51802206, 2.1943774)] (
            interpolation = "vertex"
        )

        float primvars:arnold:disp_padding = 0.2 (
            interpolation = "constant"
        )
        bool primvars:arnold:smoothing = 1 (
            interpolation = "constant"
        )
        int primvars:arnold:subdiv_iterations = 3 (
            interpolation = "constant"
        )
        int primvars:arnold:subdiv_type = 1 (
            interpolation = "constant"
        )

        uniform token subdivisionScheme = "none"
        rel material:binding = </materials/mat>
    
    }

}


def Xform "materials"
{
    def Material "mat"
    {
        token outputs:arnold:surface.connect = </materials/mat/flat.outputs:rgba>

        def Shader "flat"
        {
            uniform token info:id = "arnold:flat"
            color3f inputs:color = (0, 1, 0)
            token outputs:rgba
        }
    }
}

