#usda 1.0
(
    defaultPrim = "point_instance_cubes"
)

def Xform "point_instance_cubes" (
    kind = "assembly"
)
{
    def PointInstancer "instancer"
    {
        quath[] orientations = []
        point3f[] positions = [(0, 0, -20), (0, 0, -40)] (
            interpolation = "varying"
        )
        int[] protoIndices = [0, 0]
        prepend rel prototypes = </point_instance_cubes/instancer/Prototypes/cube>

        def "Prototypes"
        {
            def "cube" (
                prepend references = </cube>
            )
            {
            }
        }
    }
}

def Xform "cube" (
    kind = "component"
)
{
    double3 xformOp:translate = (0, 10, -20)
    uniform token[] xformOpOrder = ["xformOp:translate"]

    def Mesh "cube_GEO"
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-10, -10, -10), (10, 10, 10)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
        point3f[] points = [(-10, -10, 10), (10, -10, 10), (-10, 10, 10), (10, 10, 10), (-10, 10, -10), (10, 10, -10), (-10, -10, -10), (10, -10, -10)]
        texCoord2f[] primvars:st = [(0.375, 0), (0.625, 0), (0.375, 0.25), (0.625, 0.25), (0.375, 0.5), (0.625, 0.5), (0.375, 0.75), (0.625, 0.75), (0.375, 1), (0.625, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 9, 8, 1, 10, 11, 3, 12, 0, 2, 13]
    }
}