#usda 1.0
(
    endFrame = 1
    startFrame = 1
)
def Scope "Render"
{
    def RenderSettings "rendersettings1"
    {
        token aspectRatioConformPolicy = "expandAperture"
        rel camera = </persp/perspShape>
        float4 dataWindowNDC = (0, 0, 1, 1)
        token[] includedPurposes = ["default"]
        bool instantaneousShutter = 0
        token[] materialBindingPurposes = ["full", "allPurpose"]
        float pixelAspectRatio = 1.333
        rel products = None
        int2 resolution = (160, 120)
        custom int arnold:global:AA_samples = 3
        float arnold:meters_per_unit = 0.01
        float arnold:frame.timeSamples = {
            1: 1,
        }
    }
}


def Xform "persp"
{
    def Camera "perspShape"
    {
        float2 clippingRange = (0.1, 10000)
        float focusDistance = 1
        float horizontalAperture = 51.428566
        float[] primvars:arnold:aperture_size = [0]
        float[] primvars:arnold:fov = [54.432224]
        float2[] primvars:arnold:lens_shift = [(0, 0)]
        float2[] primvars:arnold:lens_tilt_angle = [(0, 0)]
        vector3f[] primvars:arnold:look_at = [(0, 0, -1)]
        float primvars:arnold:motion_end = 0
        vector3f[] primvars:arnold:position = [(0, 0, 0)]
        float2[] primvars:arnold:screen_window_max = [(1, 1)]
        float2[] primvars:arnold:screen_window_min = [(-1, -1)]
        vector3f[] primvars:arnold:up = [(0, 1, 0)]
        color4f primvars:arnold:uv_remap = (0, 0, 0, 1)
        string primvars:dcc_name = "perspShape" (
            elementSize = 1
            interpolation = "constant"
        )
        token projection = "perspective"
        double shutter:close = 0
        double shutter:open = 0
        float verticalAperture = 38.571426
        matrix4d xformOp:transform = ( (0.9992629289627075, -3.469446951953614e-18, -0.038387808948755264, 0), (-0.03815315663814545, -0.11039962619543076, -0.9931547045707703, 0), (-0.004237999673932791, 0.9938873052597046, -0.11031825095415115, 0), (-0.03403402492403984, 7.981591701507568, -0.8859306573867798, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}


def Xform "Xform1"
{
    def "Def1" (
        prepend references = @light_filters.usda@
    )
    {
    }
}