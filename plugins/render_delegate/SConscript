import os
from utils import system, dependencies

Import('env')
local_env = env.Clone()
src_dir = os.path.join(env['ROOT_DIR'], 'plugins', 'render_delegate')

source_files = ['renderer_plugin.cpp']
if not system.IS_WINDOWS:
    local_env.Append(CXXFLAGS = Split('-fPIC'))

local_env.Append(CPPDEFINES=['HDARNOLD_EXPORTS'])
local_env.Append(CPPPATH = [os.path.join(env['BUILD_ROOT_DIR'], 'libs', 'render_delegate')])
renderDelegateLibPath = os.path.abspath(os.path.join(local_env['BUILD_BASE_DIR'], 'libs', 'render_delegate'))
local_env.Append(LIBPATH = [renderDelegateLibPath])
local_env.Append(LIBS = ['ai', 'render_delegate'])

source_files, usd_deps = dependencies.render_delegate(local_env, source_files)
local_env.Append(LIBS = usd_deps)

# Build shared library for the usd procedural
USD = local_env.SharedLibrary('hdArnold', source_files, SHLIBPREFIX='')
Return('USD')

